{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/allproducts.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useQuery } from 'react-query'; // Components\n\nimport Item from '../Item/Item';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\n// Styles\nimport { Wrapper } from '../App.styles';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getProducts = async () => await (await fetch('http://localhost:3000/products/info')).json();\n\nexport const getBasket = async () => await (await fetch('http://localhost:3000/customers/1/basketDetails')).json();\n/* const getBasket = async () => { */\n\n/*   const res = await fetch(\"http://localhost:3000/customers/1/basket\"); */\n\n/*   return res.json(); */\n\n/* }; */\n\nconst ProductList = () => {\n  _s();\n\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItemss, setCartItems] = useState([]);\n  React.useEffect(() => {\n    fetch('http://localhost:3000/customers/1/basketDetails').then(response => response.json()).then(cartItemss => {\n      setCartItems(cartItemss);\n    });\n  }, [cartItemss]);\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('products', getProducts);\n  console.log(data);\n  /* const getTotalItems = (items: CartItemType[]) => */\n\n  /*   items.reduce((ack: number, item) => ack + item.quantity, 0); */\n\n  async function handleAddToCart(clickedItem) {\n    try {\n      const isItemInCart = (await getBasket()).some(item => item.productId === clickedItem.productId);\n\n      if (isItemInCart) {\n        const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + clickedItem.productId + \"/1\", {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        });\n        return;\n      }\n\n      const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          productId: clickedItem.productId,\n          quantity: 1\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let data = await response.json();\n      alert(\"Item Added To Cart\");\n      return setCartItems(prev => [...prev, clickedItem]);\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  async function handleRemoveFromCart(id) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\", {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          productId: id,\n          quantity: 1\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let data = await response.json();\n      alert(\"Item removed\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  async function handleDecrementFromCart(id) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + id + \"/-1\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let data = await response.json();\n      alert(\"Item decremented\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  function getDetails() {\n    console.log(\"Hello\");\n  }\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Something went wrong ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 21\n  }, this);\n  /* return ( */\n\n  /*   <Wrapper> */\n\n  {\n    /*     <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}> */\n  }\n  {\n    /*       <Cart */\n  }\n  /*         cartItems={cartItems} */\n\n  /*         addToCart={handleAddToCart} */\n\n  /*         removeFromCart={handleDecrementFromCart} */\n\n  /*       /> */\n\n  {\n    /*     </Drawer> */\n  }\n  {\n    /*     <StyledButton onClick={() => setCartOpen(true)}> */\n  }\n  {\n    /*       <Badge badgeContent={getTotalItems(cartItems)} color='error'> */\n  }\n  {\n    /*         <AddShoppingCartIcon /> */\n  }\n  {\n    /*       </Badge> */\n  }\n  {\n    /*     </StyledButton> */\n  }\n  {\n    /*     <Grid container spacing={3}> */\n  }\n  {\n    /*       {data?.map(item => ( */\n  }\n  /*         <Grid item key={item.productId} xs={12} sm={4}> */\n\n  {\n    /*           <Item item={item} handleAddToCart={handleAddToCart} /> */\n  }\n  {\n    /*         </Grid> */\n  }\n  /*       ))} */\n\n  {\n    /*     </Grid> */\n  }\n  {\n    /*   </Wrapper> */\n  }\n  /* ); */\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: data === null || data === void 0 ? void 0 : data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          item: item,\n          handleAddToCart: handleAddToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)\n      }, item.productId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductList, \"6NS1Gu+Jfk96nmPHEQ7CzOf7svg=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/allproducts.tsx"],"names":["useState","useQuery","Item","LinearProgress","Grid","Wrapper","React","getProducts","fetch","json","getBasket","ProductList","cartOpen","setCartOpen","cartItemss","setCartItems","useEffect","then","response","data","isLoading","error","console","log","handleAddToCart","clickedItem","isItemInCart","some","item","productId","method","headers","body","JSON","stringify","quantity","alert","prev","err","handleRemoveFromCart","id","handleDecrementFromCart","getDetails","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAmBC,QAAnB,QAAoD,aAApD,C,CACA;;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAGA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAGA;AACA,SAASC,OAAT,QAAsC,eAAtC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAcA,MAAMC,WAAW,GAAG,YAClB,MAAM,CAAC,MAAMC,KAAK,CAAC,qCAAD,CAAZ,EAAqDC,IAArD,EADR;;AAGE,OAAO,MAAMC,SAAS,GAAG,YACzB,MAAM,CAAC,MAAMF,KAAK,CAAC,iDAAD,CAAZ,EAAiEC,IAAjE,EADC;AAIP;;AACA;;AACA;;AACA;;AAGD,MAAME,WAAW,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAED,QAAM,CAACc,UAAD,EAAaC,YAAb,IAA6Bf,QAAQ,CAAC,EAAD,CAA3C;AACAM,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpBR,IAAAA,KAAK,CAAC,iDAAD,CAAL,CACGS,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACT,IAAT,EADtB,EAEGQ,IAFH,CAESH,UAAD,IAAgB;AACpBC,MAAAA,YAAY,CAACD,UAAD,CAAZ;AACD,KAJH;AAKD,GAND,EAMG,CAACA,UAAD,CANH;AAQE,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA6BpB,QAAQ,CACzC,UADyC,EAEzCM,WAFyC,CAA3C;AAIAe,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA;;AACA;;AAEE,iBAAeK,eAAf,CAA+BC,WAA/B,EAA0D;AACxD,QAAI;AACF,YAAMC,YAAY,GAAG,CAAC,MAAMhB,SAAS,EAAhB,EAAoBiB,IAApB,CAAyBC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmBJ,WAAW,CAACI,SAAhE,CAArB;;AACA,UAAIH,YAAJ,EAAkB;AAChB,cAAMR,QAAQ,GAAG,MAAMV,KAAK,CAAC,8CAA8CiB,WAAW,CAACI,SAA1D,GAAsE,IAAvE,EAA6E;AACvGC,UAAAA,MAAM,EAAE,KAD+F;AAEvGC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAF8F,SAA7E,CAA5B;AAMA;AACD;;AACD,YAAMb,QAAQ,GAAG,MAAMV,KAAK,CAAC,0CAAD,EAA6C;AACvEsB,QAAAA,MAAM,EAAE,MAD+D;AAEvEE,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,UAAAA,SAAS,EAAEJ,WAAW,CAACI,SADJ;AAEnBM,UAAAA,QAAQ,EAAE;AAFS,SAAf,CAFiE;AAMvEJ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAN8D,OAA7C,CAA5B;AAUA,UAAIZ,IAAI,GAAG,MAAMD,QAAQ,CAACT,IAAT,EAAjB;AACA2B,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACA,aAAOrB,YAAY,CAAEsB,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUZ,WAAV,CAAX,CAAnB;AACD,KAxBD,CAwBE,OAAOa,GAAP,EAAY;AACZF,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD;AACF;;AAEH,iBAAeC,oBAAf,CAAoCC,EAApC,EAAgD;AAC9C,QAAI;AACF,YAAMtB,QAAQ,GAAG,MAAMV,KAAK,CAAC,2CAAD,EAA8C;AACxEsB,QAAAA,MAAM,EAAE,QADgE;AAExEE,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,UAAAA,SAAS,EAAEW,EADQ;AAEnBL,UAAAA,QAAQ,EAAE;AAFS,SAAf,CAFkE;AAMxEJ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAN+D,OAA9C,CAA5B;AAUA,UAAIZ,IAAI,GAAG,MAAMD,QAAQ,CAACT,IAAT,EAAjB;AACA2B,MAAAA,KAAK,CAAC,cAAD,CAAL;AACD,KAbD,CAaE,OAAOE,GAAP,EAAY;AACZF,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD;AACF;;AAED,iBAAeG,uBAAf,CAAuCD,EAAvC,EAAmD;AACjD,QAAI;AACF,YAAMtB,QAAQ,GAAG,MAAMV,KAAK,CAAC,8CAA8CgC,EAA9C,GAAmD,KAApD,EAA2D;AACrFV,QAAAA,MAAM,EAAE,KAD6E;AAErFC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAF4E,OAA3D,CAA5B;AAMA,UAAIZ,IAAI,GAAG,MAAMD,QAAQ,CAACT,IAAT,EAAjB;AACA2B,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACD,KATD,CASE,OAAOE,GAAP,EAAY;AACZF,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD;AACF;;AAED,WAASI,UAAT,GAAqB;AACnBpB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AAED,MAAIH,SAAJ,EAAe,oBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX;;AACA;;AACA;AAAC;AAAqF;AACtF;AAAC;AAAkB;AACnB;;AACA;;AACA;;AACA;;AACA;AAAC;AAAoB;AACrB;AAAC;AAA2D;AAC5D;AAAC;AAA0E;AAC3E;AAAC;AAAsC;AACvC;AAAC;AAAqB;AACtB;AAAC;AAA0B;AAC3B;AAAC;AAAuC;AACxC;AAAC;AAAiC;AAClC;;AACA;AAAC;AAAuE;AACxE;AAAC;AAAsB;AACvB;;AACA;AAAC;AAAkB;AACnB;AAAC;AAAmB;AACpB;;AAEA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACGF,IADH,aACGA,IADH,uBACGA,IAAI,CAAEwB,GAAN,CAAUf,IAAI,iBACb,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAgC,QAAA,EAAE,EAAE,EAApC;AAAwC,QAAA,EAAE,EAAE,CAA5C;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,IAAZ;AAAkB,UAAA,eAAe,EAAEJ;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF,SAAgBI,IAAI,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnIA;;GAAMlB,W;UAa8BV,Q;;;KAb9BU,W;AAqIP,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\nimport { QueryKey, useQuery, UseQueryOptions } from 'react-query';\n// Components\nimport Item from '../Item/Item';\nimport Cart from '../Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n// Styles\nimport { Wrapper, StyledButton } from '../App.styles';\nimport { useEffect } from 'react';\nimport React from 'react';\nimport { kStringMaxLength } from 'node:buffer';\n\n// Types\nexport type CartItemType = {\n  productId: number;\n  category: string;\n  description: string;\n  img_path: string;\n  price: number;\n  name: string;\n  quantity: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('http://localhost:3000/products/info')).json();\n\n  export const getBasket = async (): Promise<CartItemType[]> =>\n  await (await fetch('http://localhost:3000/customers/1/basketDetails')).json();\n\n\n  /* const getBasket = async () => { */\n  /*   const res = await fetch(\"http://localhost:3000/customers/1/basket\"); */\n  /*   return res.json(); */\n  /* }; */\n\n\n const ProductList = () => {\n\n const [cartOpen, setCartOpen] = useState(false);\n\nconst [cartItemss, setCartItems] = useState([] as CartItemType[]);\nReact.useEffect(() => {\n  fetch('http://localhost:3000/customers/1/basketDetails')\n    .then((response) => response.json())\n    .then((cartItemss) => {\n      setCartItems(cartItemss);\n    })\n}, [cartItemss]);\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n  console.log(data);\n\n  /* const getTotalItems = (items: CartItemType[]) => */\n  /*   items.reduce((ack: number, item) => ack + item.quantity, 0); */\n\n    async function handleAddToCart(clickedItem: CartItemType) {\n      try {\n        const isItemInCart = (await getBasket()).some(item => item.productId === clickedItem.productId); \n        if (isItemInCart) {\n          const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + clickedItem.productId + \"/1\", {\n            method: \"PUT\",\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\",\n            },\n          });\n          return\n        } \n        const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            productId: clickedItem.productId,\n            quantity: 1,\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n          },\n        });\n        let data = await response.json();\n        alert(\"Item Added To Cart\");\n        return setCartItems((prev) => [...prev, clickedItem])\n      } catch (err) {\n        alert(\"Something Went Wrong\");\n        console.log(err);\n      }\n    }\n\n  async function handleRemoveFromCart(id: number) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\", {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          productId: id,\n          quantity: 1,\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n      let data = await response.json();\n      alert(\"Item removed\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  async function handleDecrementFromCart(id: number) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + id + \"/-1\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n      let data = await response.json();\n      alert(\"Item decremented\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  function getDetails(){\n    console.log(\"Hello\")\n  }\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong ...</div>;\n\n  /* return ( */\n  /*   <Wrapper> */\n  {/*     <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}> */}\n  {/*       <Cart */}\n  /*         cartItems={cartItems} */\n  /*         addToCart={handleAddToCart} */\n  /*         removeFromCart={handleDecrementFromCart} */\n  /*       /> */\n  {/*     </Drawer> */}\n  {/*     <StyledButton onClick={() => setCartOpen(true)}> */}\n  {/*       <Badge badgeContent={getTotalItems(cartItems)} color='error'> */}\n  {/*         <AddShoppingCartIcon /> */}\n  {/*       </Badge> */}\n  {/*     </StyledButton> */}\n  {/*     <Grid container spacing={3}> */}\n  {/*       {data?.map(item => ( */}\n  /*         <Grid item key={item.productId} xs={12} sm={4}> */\n  {/*           <Item item={item} handleAddToCart={handleAddToCart} /> */}\n  {/*         </Grid> */}\n  /*       ))} */\n  {/*     </Grid> */}\n  {/*   </Wrapper> */}\n  /* ); */\n\n  return (\n    <Wrapper>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.productId} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default ProductList;\n"]},"metadata":{},"sourceType":"module"}