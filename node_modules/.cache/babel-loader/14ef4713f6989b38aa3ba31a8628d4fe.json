{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/CheckBoxContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BoxContext = /*#__PURE__*/React.createContext(undefined);\nexport function CheckBoxProvider({\n  children\n}) {\n  _s();\n\n  const [checkBoxes, setCheckBoxes] = React.useState({\n    checkedA: false,\n    checkedB: false,\n    checkedC: false\n  });\n\n  const handleChangeBox = (checkedA, checkedB, checkedC) => {\n    setCheckBoxes(prev => ({ ...prev,\n      ...{\n        checkedA: checkedA,\n        checkedB: checkedB,\n        checkedC: checkedC\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(BoxContext.Provider, {\n    value: {\n      checkBox: checkBoxes,\n      setCheckBoxes: handleChangeBox\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckBoxProvider, \"lIXk4rCByh1yxCglq4Ci6pndu8M=\");\n\n_c = CheckBoxProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxProvider\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/CheckBoxContext.tsx"],"names":["React","BoxContext","createContext","undefined","CheckBoxProvider","children","checkBoxes","setCheckBoxes","useState","checkedA","checkedB","checkedC","handleChangeBox","prev","checkBox"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAqBA,OAAO,MAAMC,UAAU,gBAAGD,KAAK,CAACE,aAAN,CACtBC,SADsB,CAAnB;AAML,OAAO,SAASC,gBAAT,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAA4C;AAAA;;AACjD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,KAAK,CAACQ,QAAN,CAAe;AAC/CC,IAAAA,QAAQ,EAAE,KADqC;AAE/CC,IAAAA,QAAQ,EAAE,KAFqC;AAG/CC,IAAAA,QAAQ,EAAE;AAHqC,GAAf,CAApC;;AAME,QAAMC,eAAe,GACrB,CAACH,QAAD,EACEC,QADF,EAEEC,QAFF,KAEyB;AACvBJ,IAAAA,aAAa,CAAEM,IAAD,KAAW,EAAC,GAAGA,IAAJ;AAAU,SAAG;AAACJ,QAAAA,QAAQ,EAACA,QAAV;AAAoBC,QAAAA,QAAQ,EAACA,QAA7B;AAAuCC,QAAAA,QAAQ,EAACA;AAAhD;AAAb,KAAX,CAAD,CAAb;AACD,GALD;;AAQA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAAER,UAAZ;AAAwBC,MAAAA,aAAa,EAACK;AAAtC,KAA5B;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOC;;GAtBWD,gB;;KAAAA,gB","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\n\nexport interface checkBoz {\n   checkedA: boolean,\n   checkedB: boolean,\n   checkedC: boolean,\n  }\n\nexport interface IBoxContext {\n    checkBox: checkBoz;\n    setCheckBoxes: (\n        checkedA: boolean,\n        checkedB: boolean,\n        checkedC: boolean,) => void\n  }\n\nexport const BoxContext = React.createContext<IBoxContext | undefined>(\n    undefined\n  );\n\n  type Props = {children: React.ReactNode};\n\n  export function CheckBoxProvider({children}: Props){\n    const [checkBoxes, setCheckBoxes] = React.useState({\n        checkedA: false,\n        checkedB: false,\n        checkedC: false,\n      });\n\n      const handleChangeBox = \n      (checkedA: boolean,\n        checkedB: boolean,\n        checkedC: boolean,) => {\n        setCheckBoxes((prev) => ({...prev, ...{checkedA:checkedA, checkedB:checkedB, checkedC:checkedC}}));\n      };\n      \n\n      return (\n        <BoxContext.Provider value={{ checkBox: checkBoxes, setCheckBoxes:handleChangeBox}}>\n          {children}\n        </BoxContext.Provider>\n      );\n\n  \n      }"]},"metadata":{},"sourceType":"module"}