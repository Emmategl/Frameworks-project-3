{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Pages/Login/NameContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NameContext = React.createContext(undefined);\nexport const init = {\n  firstName: \"\"\n};\nexport function useName() {\n  _s();\n\n  return useContext(NameContext);\n}\n\n_s(useName, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const NameProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [name, setName] = useState(init);\n\n  const setNameFun = firstName => {\n    setName(prev => ({ ...prev,\n      ...{\n        firstname: firstName\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(NameContext.Provider, {\n    value: {\n      firstName: name,\n      setName: setNameFun\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(NameProvider, \"022b8VGgY49/xDxDhQAVFTobFrM=\");\n\n_c = NameProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameProvider\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Pages/Login/NameContext.tsx"],"names":["NameContext","React","createContext","undefined","init","firstName","useName","useContext","NameProvider","children","name","setName","useState","setNameFun","prev","firstname"],"mappings":";;;;;AAYA,OAAO,MAAMA,WAAW,GAAGC,KAAK,CAACC,aAAN,CAA+CC,SAA/C,CAApB;AAEP,OAAO,MAAMC,IAAI,GAAG;AAChBC,EAAAA,SAAS,EAAE;AADK,CAAb;AAMP,OAAO,SAASC,OAAT,GAAkB;AAAA;;AACrB,SAAOC,UAAU,CAACP,WAAD,CAAjB;AACH;;GAFeM,O;;AAIhB,OAAO,MAAME,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAuB;AAAA;;AACnD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAOR,IAAP,CAAhC;;AACA,QAAMS,UAAU,GAAIR,SAAD,IAAuB;AACtCM,IAAAA,OAAO,CAAEG,IAAD,KAAW,EAAC,GAAGA,IAAJ;AAAU,SAAG;AAACC,QAAAA,SAAS,EAACV;AAAX;AAAb,KAAX,CAAD,CAAP;AACD,GAFH;;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACA,MAAAA,SAAS,EAACK,IAAX;AAAiBC,MAAAA,OAAO,EAACE;AAAzB,KAA7B;AAAA,cACCJ;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAMC,CAZM;;IAAMD,Y;;KAAAA,Y","sourcesContent":["\n\n\nexport interface Name {\n    firstName: string,\n}\n\nexport interface ILoginContext {\n    firstName: Name;\n    setName: (firstName:string) => void\n}\n\nexport const NameContext = React.createContext<ILoginContext | undefined>(undefined)\n\nexport const init = {\n    firstName: \"\",\n  }\n\ntype Props = {children: React.ReactNode};\n\nexport function useName(){\n    return useContext(NameContext)\n}\n\nexport const NameProvider = ({children}: Props) => {\nconst [name, setName] = useState<Name>(init)\nconst setNameFun = (firstName: string) => {\n    setName((prev) => ({...prev, ...{firstname:firstName}})) \n  }\n\nreturn (\n    <NameContext.Provider value={{firstName:name, setName:setNameFun}}>\n    {children}\n    </NameContext.Provider>\n)\n\n}\n\n"]},"metadata":{},"sourceType":"module"}