{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Pages/Login/FormContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { LoginForm } from \"./LoginForm\";\nimport Cart from \"../../Components/Cart/Cart\";\nimport { HandleAddToCart, HandleDecrementFromCart, HandleRemoveFromCart } from \"../../Components/HandleAddToCart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const init = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\"\n};\n// create context, but there is no default value - set it to undefined.\nexport const FormContext = /*#__PURE__*/React.createContext(undefined);\nexport const {\n  Consumer\n} = FormContext;\nexport function App() {\n  _s();\n\n  const [login, updateName] = useState(init);\n\n  const updateNameFun = (firstName, lastName, email) => {\n    updateName(prev => ({ ...prev,\n      ...{\n        email: email,\n        firstname: firstName,\n        lastName: lastName\n      }\n    }));\n  };\n\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItemss, setCartItems] = useState([]);\n  React.useEffect(() => {\n    fetch('http://localhost:3000/customers/1/basketDetails').then(response => response.json()).then(cartItemss => {\n      setCartItems(cartItemss);\n    });\n  }, [cartItemss]);\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: {\n      login: login,\n      updateName: updateNameFun\n    },\n    children: [/*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {\n      cartItems: cartItemss,\n      addToCart: HandleAddToCart,\n      decrementFromCart: HandleDecrementFromCart,\n      removeFromCart: HandleRemoveFromCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"qSSVRhKDXI7X49KtJGAk02xcJVs=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Pages/Login/FormContext.tsx"],"names":["React","useState","LoginForm","Cart","HandleAddToCart","HandleDecrementFromCart","HandleRemoveFromCart","init","firstName","lastName","email","FormContext","createContext","undefined","Consumer","App","login","updateName","updateNameFun","prev","firstname","cartOpen","setCartOpen","cartItemss","setCartItems","useEffect","fetch","then","response","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AAEA,SAASC,eAAT,EAA0BC,uBAA1B,EAAmDC,oBAAnD,QAA+E,kCAA/E;;AAQC,OAAO,MAAMC,IAAI,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAAb;AAUR;AACA,OAAO,MAAMC,WAAW,gBAAGX,KAAK,CAACY,aAAN,CACvBC,SADuB,CAApB;AAIL,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAeH,WAArB;AAEP,OAAO,SAASI,GAAT,GAAc;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,UAAR,IAAsBhB,QAAQ,CAAYM,IAAZ,CAApC;;AACA,QAAMW,aAAa,GAAG,CAACV,SAAD,EAAoBC,QAApB,EAAsCC,KAAtC,KAAwD;AAC1EO,IAAAA,UAAU,CAAEE,IAAD,KAAW,EAAC,GAAGA,IAAJ;AAAU,SAAG;AAACT,QAAAA,KAAK,EAACA,KAAP;AAAcU,QAAAA,SAAS,EAACZ,SAAxB;AAAmCC,QAAAA,QAAQ,EAACA;AAA5C;AAAb,KAAX,CAAD,CAAV;AACD,GAFH;;AAIE,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,KAAD,CAAxC;AAEF,QAAM,CAACsB,UAAD,EAAaC,YAAb,IAA6BvB,QAAQ,CAAC,EAAD,CAA3C;AACID,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,iDAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESJ,UAAD,IAAgB;AACpBC,MAAAA,YAAY,CAACD,UAAD,CAAZ;AACD,KAJH;AAKD,GAND,EAMG,CAACA,UAAD,CANH;AAQF,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEP,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,UAAU,EAACC;AAA3B,KAA7B;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AACA,MAAA,SAAS,EAAEK,UADX;AAEA,MAAA,SAAS,EAAEnB,eAFX;AAGA,MAAA,iBAAiB,EAAEC,uBAHnB;AAIA,MAAA,cAAc,EAAEC;AAJhB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYH;;GA7BeS,G;;KAAAA,G","sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter, NavLink, Route, Switch } from \"react-router-dom\";\nimport { LoginForm } from \"./LoginForm\";\nimport PropTypes from \"prop-types\";\nimport Cart from \"../../Components/Cart/Cart\";\nimport { CartItemType } from \"../../Components/CartItemType\";\nimport { HandleAddToCart, HandleDecrementFromCart, HandleRemoveFromCart } from \"../../Components/HandleAddToCart\";\n\nexport interface LoginInfo {\n    firstName: string,\n    lastName: string,\n    email: string,\n  }\n\n export const init = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  }\nexport interface IFormContext {\n    login: LoginInfo;\n    updateName: (firstName:string, lastName:string, email:string) => void\n  }\n\n// create context, but there is no default value - set it to undefined.\nexport const FormContext = React.createContext<IFormContext | undefined>(\n    undefined\n  );\n\n  export const { Consumer } = FormContext;\n\n  export function App(){\n    const [login, updateName] = useState<LoginInfo>(init)\n    const updateNameFun = (firstName: string, lastName: string, email: string) => {\n        updateName((prev) => ({...prev, ...{email:email, firstname:firstName, lastName:lastName}})) \n      }\n\n      const [cartOpen, setCartOpen] = useState(false);\n\n    const [cartItemss, setCartItems] = useState([] as CartItemType[]);\n        React.useEffect(() => {\n          fetch('http://localhost:3000/customers/1/basketDetails')\n            .then((response) => response.json())\n            .then((cartItemss) => {\n              setCartItems(cartItemss);\n            })\n        }, [cartItemss]);\n\n      return (\n        <FormContext.Provider value={{ login: login, updateName:updateNameFun}}>\n          <LoginForm/>\n          <Cart\n          cartItems={cartItemss}\n          addToCart={HandleAddToCart}\n          decrementFromCart={HandleDecrementFromCart}\n          removeFromCart={HandleRemoveFromCart}\n          />\n        </FormContext.Provider>\n      );\n\n  }\n"]},"metadata":{},"sourceType":"module"}