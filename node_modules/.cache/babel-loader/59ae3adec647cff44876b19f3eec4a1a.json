{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/productsDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport '../style.css';\nimport '../products.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst amountObject = {};\n\nconst mapStateToProps = state => ({\n  cart: state.cart.products,\n  amount: state.cart.products.reduce((amount, currentValue) => {\n    // eslint-disable-next-line no-param-reassign\n    amount[currentValue.id] = currentValue.amount;\n    return amount;\n  }, amountObject)\n});\n/* let teas: { id: number; name: string; price: number; img_path: string; description: string; popularity: number; type: string; longDescription: string; }[] = [] */\n\n/* function allTeas(){ */\n\n/*     teas = products.filter(it => new RegExp('tea').test(it.type)) */\n\n/* } */\n\n/*  */\n\n/*  */\n\n/* function loadProducts(allTeas: any[]) { */\n\n/*     allTeas.map((product)=> { */\n\n/*         let item = document.createElement('div'); */\n\n/*         item.id = 'content'; */\n\n/*         item.className = 'product-card'; */\n\n/*         item.innerHTML =  */\n\n/*         `<div class=\"product-image\"> */\n\n/*             <a class=\"links\" href=\"productDescription.html\"> */\n\n/*             <img src=\"${product.img_path}\"> */\n\n/*                 </a> */\n\n/*             </div> */\n\n/*             <div class=\"product-info\"> */\n\n/*             <h2 class=\"name\">${product.name}</h2> */\n\n/*                 <p class=\"des\">${product.description}</p> */\n\n/*                 <p class=\"price\">Price: ${product.price} DKK</p> */\n\n/*                 <button class=\"btn add\">ADD TO CART</button> */\n\n/*             </div>     */\n\n/*         </div>` */\n\n/*     }); */\n\n/* } */\n\n\nfunction ProductDisplay(props) {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  useAsyncEffect(async () => {\n    const response = await api.get('products');\n    const productsData = response.data.map(product => ({ ...product,\n      priceFormatted: formatPrice(product.price)\n    }));\n    setProducts(productsData);\n  }, []);\n\n  function handleAddProduct(product) {\n    const {\n      dispatch\n    } = props;\n    dispatch(CartActions.addProductToCart({ ...product,\n      priceFormatted: formatPrice(product.price)\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(ProductList, {\n    children: [products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.img_path,\n        alt: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: product.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddProduct(product),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MdAddShoppingCart, {\n            size: 16,\n            color: \"#fff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), props.amount[product.id] || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Adicionar ao Carrinho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, product.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductDisplay, \"mfzSgdj+VsRNFL4NtiQyN2RKg04=\", true);\n\n_c = ProductDisplay;\nlet products = [{\n  \"id\": 12,\n  \"name\": \"Green tea\",\n  \"price\": 40,\n  \"img_path\": \"Images/Teas/12.png\",\n  \"description\": \"Tasting notes: Cool mint, Ginger, Spices\",\n  \"popularity\": 3,\n  \"type\": \"tea\",\n  \"longDescription\": \"A true classic in herbal tea. Cool Mint is without a\"\n}, {\n  \"id\": 3,\n  \"name\": \"Starbucks House Blend\",\n  \"price\": 45,\n  \"img_path\": \"Images/Coffees/3.png\",\n  \"description\": \"Tasting notes: Toffee, Cinnamon, Lemon\",\n  \"popularity\": 1,\n  \"type\": \"coffee\",\n  \"longDescription\": \"This variant is called House Blend and is the first\"\n}, {\n  \"id\": 13,\n  \"name\": \"Chai tea\",\n  \"price\": 59,\n  \"img_path\": \"Images/Teas/13.png\",\n  \"description\": \"Tasting notes: Cinnamon, Cardamom, Ginger\",\n  \"popularity\": 1,\n  \"type\": \"tea\",\n  \"longDescription\": \"Original chai with black tea and warming herbs.\"\n}];\nexport default ProductDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDisplay\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/productsDisplay.tsx"],"names":["React","amountObject","mapStateToProps","state","cart","products","amount","reduce","currentValue","id","ProductDisplay","props","setProducts","useState","useAsyncEffect","response","api","get","productsData","data","map","product","priceFormatted","formatPrice","price","handleAddProduct","dispatch","CartActions","addProductToCart","img_path","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport pic1 from \"../Images/Homepage/Coffee.jpg\";\nimport pic2 from \"../Images/Homepage/Tea.jpg\";\nimport '../style.css';\nimport '../products.css';\n\ntype amountProduct = { [key: number]: any };\nconst amountObject: amountProduct = {};\nconst mapStateToProps = (state: RootState) => ({\n    cart: state.cart.products,\n    amount: state.cart.products.reduce((amount, currentValue) => {\n        // eslint-disable-next-line no-param-reassign\n        amount[currentValue.id] = currentValue.amount;\n        return amount;\n    }, amountObject),\n});\n\n\n/* let teas: { id: number; name: string; price: number; img_path: string; description: string; popularity: number; type: string; longDescription: string; }[] = [] */\n/* function allTeas(){ */\n/*     teas = products.filter(it => new RegExp('tea').test(it.type)) */\n/* } */\n/*  */\n/*  */\n/* function loadProducts(allTeas: any[]) { */\n/*     allTeas.map((product)=> { */\n/*         let item = document.createElement('div'); */\n/*         item.id = 'content'; */\n/*         item.className = 'product-card'; */\n/*         item.innerHTML =  */\n/*         `<div class=\"product-image\"> */\n/*             <a class=\"links\" href=\"productDescription.html\"> */\n/*             <img src=\"${product.img_path}\"> */\n/*                 </a> */\n/*             </div> */\n/*             <div class=\"product-info\"> */\n/*             <h2 class=\"name\">${product.name}</h2> */\n/*                 <p class=\"des\">${product.description}</p> */\n/*                 <p class=\"price\">Price: ${product.price} DKK</p> */\n/*                 <button class=\"btn add\">ADD TO CART</button> */\n/*             </div>     */\n/*         </div>` */\n/*     }); */\n/* } */\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\ntype Props = StateProps & DispatchProp;\n\nfunction ProductDisplay(props: Props) {\n\n    const [products, setProducts] = useState<IProduct[]>([]);\n\n    useAsyncEffect(async () => {\n        const response = await api.get('products');\n\n        const productsData = response.data.map((product: IProduct) => ({\n            ...product,\n            priceFormatted: formatPrice(product.price),\n        }));\n\n        setProducts(productsData);\n    }, []);\n\n    function handleAddProduct(product: IProduct) {\n        const { dispatch } = props;\n        dispatch(\n            CartActions.addProductToCart({\n                ...product,\n                priceFormatted: formatPrice(product.price),\n            })\n        );\n    }\n\n    \n    return (\n        <ProductList>\n        {products.map(product => (\n            <li key={product.id}>\n                <img src={product.img_path} alt={product.name} />\n                <strong>{product.name}</strong>\n                <span>{product.price}</span>\n                <button\n                    type=\"button\"\n                    onClick={() => handleAddProduct(product)}\n                >\n                    <div>\n                        <MdAddShoppingCart size={16} color=\"#fff\" />\n                        {props.amount[product.id] || 0}\n                    </div>\n                    <span>Adicionar ao Carrinho</span>\n                </button>\n            </li>\n        ))}\n        )\n    </ProductList>\n    );\n  }\n\n\n\n  let products = [\n    {\n    \"id\": 12,\n    \"name\": \"Green tea\",\n    \"price\": 40,\n    \"img_path\": \"Images/Teas/12.png\",\n    \"description\": \"Tasting notes: Cool mint, Ginger, Spices\",\n    \"popularity\": 3,\n    \"type\": \"tea\",\n    \"longDescription\": \"A true classic in herbal tea. Cool Mint is without a\"\n   },\n   {\n    \"id\": 3,\n    \"name\": \"Starbucks House Blend\",\n    \"price\":45,\n    \"img_path\": \"Images/Coffees/3.png\",\n    \"description\": \"Tasting notes: Toffee, Cinnamon, Lemon\",\n    \"popularity\": 1,\n    \"type\": \"coffee\",\n    \"longDescription\": \"This variant is called House Blend and is the first\"\n},\n   {\n        \"id\": 13,\n        \"name\": \"Chai tea\",\n        \"price\": 59,\n        \"img_path\": \"Images/Teas/13.png\",\n        \"description\": \"Tasting notes: Cinnamon, Cardamom, Ginger\",\n        \"popularity\": 1,\n        \"type\": \"tea\",\n        \"longDescription\": \"Original chai with black tea and warming herbs.\"\n   }]\n\n  export default ProductDisplay;\n\n\n"]},"metadata":{},"sourceType":"module"}