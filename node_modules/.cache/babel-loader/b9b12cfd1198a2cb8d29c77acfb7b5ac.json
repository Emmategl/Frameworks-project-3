{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/productsDisplay.tsx\";\nimport React from \"react\";\nimport '../style.css';\nimport '../products.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet teas = [];\n\nfunction allTeas() {\n  teas = products.filter(it => new RegExp('tea').test(it.type));\n}\n\nfunction loadProducts(allTeas) {\n  allTeas.map(product => {\n    let item = document.createElement('div');\n    item.id = 'content';\n    item.className = 'product-card';\n    item.innerHTML = `<div class=\"product-image\">\n            <a class=\"links\" href=\"productDescription.html\">\n            <img src=\"${product.img_path}\">\n                </a>\n            </div>\n            <div class=\"product-info\">\n            <h2 class=\"name\">${product.name}</h2>\n                <p class=\"des\">${product.description}</p>\n                <p class=\"price\">Price: ${product.price} DKK</p>\n                <button class=\"btn add\">ADD TO CART</button>\n            </div>    \n        </div>`;\n  });\n}\n\nfunction ProductDisplay() {\n  return /*#__PURE__*/_jsxDEV(ProductList, {\n    children: [products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.img_pat,\n        alt: product.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: product.priceFormatted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleAddProduct(product),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MdAddShoppingCart, {\n            size: 16,\n            color: \"#fff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), props.amount[product.id] || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Adicionar ao Carrinho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, product.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ProductDisplay;\nlet products = [{\n  \"id\": 12,\n  \"name\": \"Green tea\",\n  \"price\": 40,\n  \"img_path\": \"Images/Teas/12.png\",\n  \"description\": \"Tasting notes: Cool mint, Ginger, Spices\",\n  \"popularity\": 3,\n  \"type\": \"tea\",\n  \"longDescription\": \"A true classic in herbal tea. Cool Mint is without a\"\n}, {\n  \"id\": 3,\n  \"name\": \"Starbucks House Blend\",\n  \"price\": 45,\n  \"img_path\": \"Images/Coffees/3.png\",\n  \"description\": \"Tasting notes: Toffee, Cinnamon, Lemon\",\n  \"popularity\": 1,\n  \"type\": \"coffee\",\n  \"longDescription\": \"This variant is called House Blend and is the first\"\n}, {\n  \"id\": 13,\n  \"name\": \"Chai tea\",\n  \"price\": 59,\n  \"img_path\": \"Images/Teas/13.png\",\n  \"description\": \"Tasting notes: Cinnamon, Cardamom, Ginger\",\n  \"popularity\": 1,\n  \"type\": \"tea\",\n  \"longDescription\": \"Original chai with black tea and warming herbs.\"\n}];\nexport default ProductDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDisplay\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/productsDisplay.tsx"],"names":["React","teas","allTeas","products","filter","it","RegExp","test","type","loadProducts","map","product","item","document","createElement","id","className","innerHTML","img_path","name","description","price","ProductDisplay","img_pat","title","priceFormatted","handleAddProduct","props","amount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAO,cAAP;AACA,OAAO,iBAAP;;AAEA,IAAIC,IAAsJ,GAAG,EAA7J;;AACA,SAASC,OAAT,GAAkB;AACdD,EAAAA,IAAI,GAAGE,QAAQ,CAACC,MAAT,CAAgBC,EAAE,IAAI,IAAIC,MAAJ,CAAW,KAAX,EAAkBC,IAAlB,CAAuBF,EAAE,CAACG,IAA1B,CAAtB,CAAP;AACH;;AAGD,SAASC,YAAT,CAAsBP,OAAtB,EAAsC;AAClCA,EAAAA,OAAO,CAACQ,GAAR,CAAaC,OAAD,IAAY;AACpB,QAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AACAF,IAAAA,IAAI,CAACG,EAAL,GAAU,SAAV;AACAH,IAAAA,IAAI,CAACI,SAAL,GAAiB,cAAjB;AACAJ,IAAAA,IAAI,CAACK,SAAL,GACC;AACT;AACA,wBAAwBN,OAAO,CAACO,QAAS;AACzC;AACA;AACA;AACA,+BAA+BP,OAAO,CAACQ,IAAK;AAC5C,iCAAiCR,OAAO,CAACS,WAAY;AACrD,0CAA0CT,OAAO,CAACU,KAAM;AACxD;AACA;AACA,eAZQ;AAaH,GAjBD;AAkBH;;AAED,SAASC,cAAT,GAA0B;AACtB,sBACI,QAAC,WAAD;AAAA,eACCnB,QAAQ,CAACO,GAAT,CAAaC,OAAO,iBACjB;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEA,OAAO,CAACY,OAAlB;AAA2B,QAAA,GAAG,EAAEZ,OAAO,CAACa;AAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAASb,OAAO,CAACQ;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAOR,OAAO,CAACc;AAAf;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAACf,OAAD,CAFnC;AAAA,gCAII;AAAA,kCACI,QAAC,iBAAD;AAAmB,YAAA,IAAI,EAAE,EAAzB;AAA6B,YAAA,KAAK,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKgB,KAAK,CAACC,MAAN,CAAajB,OAAO,CAACI,EAArB,KAA4B,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAASJ,OAAO,CAACI,EAAjB;AAAA;AAAA;AAAA;AAAA,YADH,CADD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBD;;KAvBMO,c;AA2BP,IAAInB,QAAQ,GAAG,CACb;AACA,QAAM,EADN;AAEA,UAAQ,WAFR;AAGA,WAAS,EAHT;AAIA,cAAY,oBAJZ;AAKA,iBAAe,0CALf;AAMA,gBAAc,CANd;AAOA,UAAQ,KAPR;AAQA,qBAAmB;AARnB,CADa,EAWd;AACC,QAAM,CADP;AAEC,UAAQ,uBAFT;AAGC,WAAQ,EAHT;AAIC,cAAY,sBAJb;AAKC,iBAAe,wCALhB;AAMC,gBAAc,CANf;AAOC,UAAQ,QAPT;AAQC,qBAAmB;AARpB,CAXc,EAqBd;AACK,QAAM,EADX;AAEK,UAAQ,UAFb;AAGK,WAAS,EAHd;AAIK,cAAY,oBAJjB;AAKK,iBAAe,2CALpB;AAMK,gBAAc,CANnB;AAOK,UAAQ,KAPb;AAQK,qBAAmB;AARxB,CArBc,CAAf;AAgCA,eAAemB,cAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport pic1 from \"../Images/Homepage/Coffee.jpg\";\nimport pic2 from \"../Images/Homepage/Tea.jpg\";\nimport '../style.css';\nimport '../products.css';\n\nlet teas: { id: number; name: string; price: number; img_path: string; description: string; popularity: number; type: string; longDescription: string; }[] = []\nfunction allTeas(){\n    teas = products.filter(it => new RegExp('tea').test(it.type))\n}\n\n\nfunction loadProducts(allTeas: any[]) {\n    allTeas.map((product)=> {\n        let item = document.createElement('div');\n        item.id = 'content';\n        item.className = 'product-card';\n        item.innerHTML = \n        `<div class=\"product-image\">\n            <a class=\"links\" href=\"productDescription.html\">\n            <img src=\"${product.img_path}\">\n                </a>\n            </div>\n            <div class=\"product-info\">\n            <h2 class=\"name\">${product.name}</h2>\n                <p class=\"des\">${product.description}</p>\n                <p class=\"price\">Price: ${product.price} DKK</p>\n                <button class=\"btn add\">ADD TO CART</button>\n            </div>    \n        </div>`\n    });\n}\n\nfunction ProductDisplay() {\n    return (\n        <ProductList>\n        {products.map(product => (\n            <li key={product.id}>\n                <img src={product.img_pat} alt={product.title} />\n                <strong>{product.name}</strong>\n                <span>{product.priceFormatted}</span>\n                <button\n                    type=\"button\"\n                    onClick={() => handleAddProduct(product)}\n                >\n                    <div>\n                        <MdAddShoppingCart size={16} color=\"#fff\" />\n                        {props.amount[product.id] || 0}\n                    </div>\n                    <span>Adicionar ao Carrinho</span>\n                </button>\n            </li>\n        ))}\n        )\n    </ProductList>\n    );\n  }\n\n\n\n  let products = [\n    {\n    \"id\": 12,\n    \"name\": \"Green tea\",\n    \"price\": 40,\n    \"img_path\": \"Images/Teas/12.png\",\n    \"description\": \"Tasting notes: Cool mint, Ginger, Spices\",\n    \"popularity\": 3,\n    \"type\": \"tea\",\n    \"longDescription\": \"A true classic in herbal tea. Cool Mint is without a\"\n   },\n   {\n    \"id\": 3,\n    \"name\": \"Starbucks House Blend\",\n    \"price\":45,\n    \"img_path\": \"Images/Coffees/3.png\",\n    \"description\": \"Tasting notes: Toffee, Cinnamon, Lemon\",\n    \"popularity\": 1,\n    \"type\": \"coffee\",\n    \"longDescription\": \"This variant is called House Blend and is the first\"\n},\n   {\n        \"id\": 13,\n        \"name\": \"Chai tea\",\n        \"price\": 59,\n        \"img_path\": \"Images/Teas/13.png\",\n        \"description\": \"Tasting notes: Cinnamon, Cardamom, Ginger\",\n        \"popularity\": 1,\n        \"type\": \"tea\",\n        \"longDescription\": \"Original chai with black tea and warming herbs.\"\n   }]\n\n  export default ProductDisplay;\n\n\n"]},"metadata":{},"sourceType":"module"}