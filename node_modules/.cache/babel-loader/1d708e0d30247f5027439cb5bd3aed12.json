{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n\nconst Basket = () => {\n  _s();\n\n  const [result, setResult] = useState({\n    status: 'loading'\n  });\n  useEffect(() => {\n    fetch('http://localhost:3000/customers/1/basket').then(response => response.json()).then(response => setResult({\n      status: 'loaded',\n      payload: response\n    })).catch(error => setResult({\n      status: 'error',\n      error\n    }));\n  }, []);\n  return result;\n};\n\n_s(Basket, \"/f34l4iA624spiDXOkL42QUGets=\");\n\n_c = Basket;\nexport default Basket;\n\nvar _c;\n\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/basket.tsx"],"names":["useEffect","useState","Basket","result","setResult","status","fetch","then","response","json","payload","catch","error"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AA2BA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAyB;AAC3DI,IAAAA,MAAM,EAAE;AADmD,GAAzB,CAApC;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,0CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQC,QAAQ,IAAIJ,SAAS,CAAC;AAAEC,MAAAA,MAAM,EAAE,QAAV;AAAoBK,MAAAA,OAAO,EAAEF;AAA7B,KAAD,CAF7B,EAGGG,KAHH,CAGSC,KAAK,IAAIR,SAAS,CAAC;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBO,MAAAA;AAAnB,KAAD,CAH3B;AAID,GALQ,EAKN,EALM,CAAT;AAOA,SAAOT,MAAP;AACD,CAbD;;GAAMD,M;;KAAAA,M;AAeN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { CartItemType } from './allproducts';\n\ninterface ServiceInit {\n    status: 'init';\n  }\n  interface ServiceLoading {\n    status: 'loading';\n  }\n  interface ServiceLoaded<T> {\n    status: 'loaded';\n    payload: T;\n  }\n  interface ServiceError {\n    status: 'error';\n    error: Error;\n  }\n  export type Service<T> =\n    | ServiceInit\n    | ServiceLoading\n    | ServiceLoaded<T>\n    | ServiceError;\n\nexport interface CartItemTypes {\n  results: CartItemType[];\n}\n\nconst Basket = () => {\n  const [result, setResult] = useState<Service<CartItemTypes>>({\n    status: 'loading'\n  });\n\n  useEffect(() => {\n    fetch('http://localhost:3000/customers/1/basket')\n      .then(response => response.json())\n      .then(response => setResult({ status: 'loaded', payload: response }))\n      .catch(error => setResult({ status: 'error', error }));\n  }, []);\n\n  return result;\n};\n\nexport default Basket;"]},"metadata":{},"sourceType":"module"}