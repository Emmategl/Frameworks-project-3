{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Cart/Cart.tsx\";\nimport CartItem from '../CartItem/CartItem';\nimport { Wrapper } from './Cart.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = ({\n  cartItems,\n  addToCart,\n  removeFromCart\n}) => {\n  const calculateTotal = items => items.reduce((ack, item) => ack +\n  /* item.quantity * */\n  item.price, 0);\n\n  async function handleBasket() {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let data = await response.json();\n      return data;\n      alert(\"Item\");\n    } catch (err) {\n      alert(\"Something\");\n      console.log(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items in cart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }, this) : null, cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: item,\n      addToCart: addToCart,\n      removeFromCart: removeFromCart\n    }, item.productId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total: $\", calculateTotal(cartItems).toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Cart/Cart.tsx"],"names":["CartItem","Wrapper","Cart","cartItems","addToCart","removeFromCart","calculateTotal","items","reduce","ack","item","price","handleBasket","response","fetch","method","headers","data","json","alert","err","console","log","length","map","productId","toFixed"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SAASC,OAAT,QAAwB,eAAxB;;;AASA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAA8C;AAC1E,QAAMC,cAAc,GAAIC,KAAD,IACrBA,KAAK,CAACC,MAAN,CAAa,CAACC,GAAD,EAAcC,IAAd,KAAuBD,GAAG;AAAG;AAAsBC,EAAAA,IAAI,CAACC,KAArE,EAA4E,CAA5E,CADF;;AAIA,iBAAeC,YAAf,GAA8B;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAAD,EAA6C;AACvEC,QAAAA,MAAM,EAAE,KAD+D;AAEvEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAF8D,OAA7C,CAA5B;AAMA,UAAIC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAjB;AACA,aAAOD,IAAP;AACAE,MAAAA,KAAK,CAAC,MAAD,CAAL;AACD,KAVD,CAUE,OAAOC,GAAP,EAAY;AACZD,MAAAA,KAAK,CAAC,WAAD,CAAL;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,sBACE,QAAC,OAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGjB,SAAS,CAACoB,MAAV,KAAqB,CAArB,gBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB,GAAoD,IAFvD,EAGGpB,SAAS,CAACqB,GAAV,CAAcd,IAAI,iBACjB,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,MAAA,SAAS,EAAEN,SAHb;AAIE,MAAA,cAAc,EAAEC;AAJlB,OACOK,IAAI,CAACe,SADZ;AAAA;AAAA;AAAA;AAAA,YADD,CAHH,eAWE;AAAA,6BAAanB,cAAc,CAACH,SAAD,CAAd,CAA0BuB,OAA1B,CAAkC,CAAlC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArCD;;KAAMxB,I;AAuCN,eAAeA,IAAf","sourcesContent":["import CartItem from '../CartItem/CartItem';\nimport { Wrapper } from './Cart.styles';\nimport { CartItemType } from '../Components/allproducts';\n\ntype Props = {\n  cartItems: CartItemType[];\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n};\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\n  const calculateTotal = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + /* item.quantity * */ item.price, 0);\n\n\n  async function handleBasket() {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n      let data = await response.json();\n      return data\n      alert(\"Item\");\n    } catch (err) {\n      alert(\"Something\");\n      console.log(err);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <h2>Your Shopping Cart</h2>\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\n      {cartItems.map(item => (\n        <CartItem\n          key={item.productId}\n          item={item}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n        />\n      ))}\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n    </Wrapper>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}