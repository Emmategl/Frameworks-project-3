{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/allproducts.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useQuery } from 'react-query'; // Components\n\nimport Item from '../Item/Item';\nimport Cart from '../Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge'; // Styles\n\nimport { Wrapper, StyledButton } from '../App.styles'; // Types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getProducts = async () => await (await fetch('http://localhost:3000/products/info')).json();\n\nconst ProductList = () => {\n  _s();\n\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('products', getProducts);\n  console.log(data);\n\n  const getTotalItems = items => items.reduce((ack, item) => ack + item.quantity, 0);\n\n  async function handleAddToCart(id) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          productId: id,\n          quantity: 1\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let data = await response.json();\n      alert(\"Item Added To Cart\");\n      console.log(data);\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  const handleAddToCarta = clickedItem => {\n    setCartItems(prev => {\n      // 1. Is the item already added in the cart?\n      const isItemInCart = prev.find(item => item.productId === clickedItem.productId);\n\n      if (isItemInCart) {\n        return prev.map(item => item.productId === clickedItem.productId ? { ...item,\n          quantity: item.quantity + 1\n        } : item, console.log(\"hello\"));\n      } // First time the item is added\n\n\n      console.log(\"hello1\");\n      return [...prev, { ...clickedItem,\n        quantity: 1\n      }];\n    });\n  };\n\n  const handleRemoveFromCart = id => {\n    setCartItems(prev => prev.reduce((ack, item) => {\n      if (item.productId === id) {\n        if (item.quantity === 1) return ack;\n        return [...ack, { ...item,\n          quantity: item.quantity - 1\n        }];\n      } else {\n        return [...ack, item];\n      }\n    }, []));\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Something went wrong ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      open: cartOpen,\n      onClose: () => setCartOpen(false),\n      children: /*#__PURE__*/_jsxDEV(Cart, {\n        cartItems: cartItems,\n        addToCart: handleAddToCart(),\n        removeFromCart: handleRemoveFromCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n      onClick: () => setCartOpen(true),\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: getTotalItems(cartItems),\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(AddShoppingCartIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: data === null || data === void 0 ? void 0 : data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          item: item,\n          handleAddToCart: handleAddToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, item.productId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductList, \"sNjVdc7sEflwnqV2PP/uW1253TQ=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/allproducts.tsx"],"names":["useState","useQuery","Item","Cart","Drawer","LinearProgress","Grid","AddShoppingCartIcon","Badge","Wrapper","StyledButton","getProducts","fetch","json","ProductList","cartOpen","setCartOpen","cartItems","setCartItems","data","isLoading","error","console","log","getTotalItems","items","reduce","ack","item","quantity","handleAddToCart","id","response","method","body","JSON","stringify","productId","headers","alert","err","handleAddToCarta","clickedItem","prev","isItemInCart","find","map","handleRemoveFromCart"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { QueryKey, useQuery, UseQueryOptions } from 'react-query';\n// Components\nimport Item from '../Item/Item';\nimport Cart from '../Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n// Styles\nimport { Wrapper, StyledButton } from '../App.styles';\n// Types\nexport type CartItemType = {\n  productId: number;\n  category: string;\n  description: string;\n  img_path: string;\n  price: number;\n  name: string;\n  quantity: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('http://localhost:3000/products/info')).json();\n\nconst ProductList = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.quantity, 0);\n\n    async function handleAddToCart(id: any) {\n      try {\n        const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            productId: id,\n            quantity: 1,\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n          },\n        });\n        let data = await response.json();\n        alert(\"Item Added To Cart\");\n        console.log(data);\n      } catch (err) {\n        alert(\"Something Went Wrong\");\n        console.log(err);\n      }\n    }\n\n\n  const handleAddToCarta = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      // 1. Is the item already added in the cart?\n      const isItemInCart = prev.find(item => item.productId === clickedItem.productId);\n\n      if (isItemInCart) {\n        return prev.map(item =>\n          item.productId === clickedItem.productId\n            ? { ...item, quantity: item.quantity + 1 }\n            : item,\n            console.log(\"hello\")\n        );\n      }\n      \n      // First time the item is added\n      console.log(\"hello1\")\n      return [...prev, { ...clickedItem, quantity: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems(prev =>\n      prev.reduce((ack, item) => {\n        if (item.productId === id) {\n          if (item.quantity === 1) return ack;\n          return [...ack, { ...item, quantity: item.quantity - 1 }];\n        } else {\n          return [...ack, item];\n        }\n      }, [] as CartItemType[])\n    );\n  };\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong ...</div>;\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart()}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.productId} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default ProductList;\n"]},"metadata":{},"sourceType":"module"}