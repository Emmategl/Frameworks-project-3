{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/prodDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\n/* interface product { */\n\n/*     productId: number; */\n\n/*     description: string; */\n\n/*     img_path: string; */\n\n/*     price: number; */\n\n/*     name: string; */\n\n/*     longDescription: string; */\n\n/* } */\n\n/*  */\n\n/* function Product({match}: {match: any}) { */\n\n/*     return ( */\n\n/*       <div> */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*         This is our lovely product page! */\n}\n{\n  /*         You are currently viewing {match.params.id} */\n}\n{\n  /*       </div> */\n}\n/*     ); */\n\n/*   } */\n\n/* function ProductDetail(this: any, {props}: {props: any}) { */\n\n/*     const id = this.props.match.params.id; */\n\n/*     console.log(props) */\n\n/*       return ( */\n\n/*       <div> */\n\n{\n  /*         <h1>Book details go here</h1> */\n}\n{\n  /*         <h3></h3> */\n}\n{\n  /*       </div> */\n}\n/*     ) */\n\n/*   } */\n\n/* const Product = (props: { match: { params: { id: number; }; }; }) => { */\n\n/*     console.log(props.match.params.id) */\n\n/*       const product = products.find((x) => x.id === props.match.params.id); */\n\n/*       console.log(product) */\n\n/*         if (!product) { */\n\n/*           return <div>product not found!</div>; */\n\n/*         } */\n\n/*         if (product) { */\n\n/*             return <div>product not found!</div>; */\n\n/*           } */\n\n/*         } */\n\nconst getProducts = async () => await (await fetch('http://localhost:3000/products/info')).json();\n\nconst ProductDetail = ({\n  match\n}) => {\n  _s();\n\n  const getProduct = async () => await (await fetch('http://localhost:3000/products/' + match.params.productId)).json();\n\n  const {\n    data\n  } = useQuery('product', getProduct);\n\n  if (data) {\n    /* console.log(data); */\n    //data gives the correct product array\n    console.log(data.name); //gives error \"Property 'name' does not exist on type 'CartItemType[]'\"\n\n    /* console.log('product') */\n  }\n  /* const product = data?.find((x) => x.productId === match.params.productId); */\n\n  /* console.log(product) */\n\n\n  if (data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Product ID: \", data.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Product ID: \", match.params.img_path]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Product ID: \", match.params.productId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ProductDetail, \"wDefygpsWBVTl/fEL2emlq2/574=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductDetail;\nexport default ProductDetail;\n/*  const ProductDetail = ({match}: {match: any}, {location} : {location: any}) */\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/prodDetails.tsx"],"names":["React","useQuery","getProducts","fetch","json","ProductDetail","match","getProduct","params","productId","data","console","log","name","img_path"],"mappings":";;;AACA,OAAOA,KAAP,MAA2C,OAA3C;AAIA,SAASC,QAAT,QAAyB,aAAzB;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AACA;AAAC;AAA+C;AAChD;AAAC;AAA0D;AAC3D;AAAC;AAAmB;AACpB;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;AAAC;AAA4C;AAC7C;AAAC;AAAwB;AACzB;AAAC;AAAmB;AACpB;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMC,WAAW,GAAG,YAClB,MAAM,CAAC,MAAMC,KAAK,CAAC,qCAAD,CAAZ,EAAqDC,IAArD,EADR;;AAaA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA2B;AAAA;;AAC3C,QAAMC,UAAU,GAAG,YACnB,MAAM,CAAC,MAAMJ,KAAK,CAAC,oCAAmCG,KAAK,CAACE,MAAN,CAAaC,SAAjD,CAAZ,EAAyEL,IAAzE,EADN;;AAEA,QAAM;AAACM,IAAAA;AAAD,MAAST,QAAQ,CACrB,SADqB,EAErBM,UAFqB,CAAvB;;AAKA,MAAGG,IAAH,EAAQ;AACR;AAAyB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB,EAFQ,CAEe;;AACvB;AACC;AAEH;;AACA;;;AACJ,MAAGH,IAAH,EACA,oBACE;AAAA,4BACD;AAAA,iCAAgBA,IAAI,CAACG,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,eAED;AAAA,iCAAgBP,KAAK,CAACE,MAAN,CAAaM,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFC,eAGD;AAAA,iCAAgBR,KAAK,CAACE,MAAN,CAAaC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaK,CA9BL;;GAAMJ,a;UAGeJ,Q;;;KAHfI,a;AAgCJ,eAAeA,aAAf;AAGD","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Link, match, NavLink, Route, Switch, useParams } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport getById, { CartItemType } from './nav';\nimport { useQuery } from \"react-query\";\n\n\n/* interface product { */\n/*     productId: number; */\n/*     description: string; */\n/*     img_path: string; */\n/*     price: number; */\n/*     name: string; */\n/*     longDescription: string; */\n/* } */\n/*  */\n/* function Product({match}: {match: any}) { */\n/*     return ( */\n/*       <div> */\n{/*         This is our lovely product page! */}\n{/*         You are currently viewing {match.params.id} */}\n{/*       </div> */}\n/*     ); */\n/*   } */\n\n\n/* function ProductDetail(this: any, {props}: {props: any}) { */\n/*     const id = this.props.match.params.id; */\n/*     console.log(props) */\n/*       return ( */\n/*       <div> */\n{/*         <h1>Book details go here</h1> */}\n{/*         <h3></h3> */}\n{/*       </div> */}\n/*     ) */\n/*   } */\n\n/* const Product = (props: { match: { params: { id: number; }; }; }) => { */\n/*     console.log(props.match.params.id) */\n/*       const product = products.find((x) => x.id === props.match.params.id); */\n/*       console.log(product) */\n/*         if (!product) { */\n/*           return <div>product not found!</div>; */\n/*         } */\n/*         if (product) { */\n/*             return <div>product not found!</div>; */\n/*           } */\n/*         } */\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('http://localhost:3000/products/info')).json();\n\n  interface Provider {\n    productId: number;\n    category: string;\n    description: string;\n    img_path: string;\n    price: number;\n    name: string;\n    quantity: number;\n}\n\nconst ProductDetail = ({match}: {match: any}) => {\n      const getProduct = async (): Promise<CartItemType[]> =>\n      await (await fetch('http://localhost:3000/products/'+ match.params.productId)).json(); \n      const {data} = useQuery<CartItemType[]>(\n        'product',\n        getProduct\n      );\n\n      if(data){\n      /* console.log(data); */ //data gives the correct product array\n      console.log(data.name) //gives error \"Property 'name' does not exist on type 'CartItemType[]'\"\n      /* console.log('product') */\n      }\n\n    /* const product = data?.find((x) => x.productId === match.params.productId); */\n    /* console.log(product) */\nif(data)\nreturn (\n  <div>\n <p>Product ID: {data.name}</p>\n <p>Product ID: {match.params.img_path}</p> \n <p>Product ID: {match.params.productId}</p> \n\n  {/*   <h3>ID: product</h3> */}\n  {/* <p>Product ID: {id.params.productId}</p> */}\n  {/* <img src=\"\" alt=\"\" /> */}\n  {/* <p>Product name:{location.state.productObject.attributes.name} </p> */}\n  {/* <p>Product description: </p> */}\n</div>\n)\n    }\n\n  export default ProductDetail\n\n\n /*  const ProductDetail = ({match}: {match: any}, {location} : {location: any}) */"]},"metadata":{},"sourceType":"module"}