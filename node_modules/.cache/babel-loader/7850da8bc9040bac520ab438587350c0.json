{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/CheckBoxContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BoxContext = /*#__PURE__*/React.createContext(undefined);\nexport function CheckBoxProvider({\n  children\n}) {\n  _s();\n\n  const [checkBoxes, setCheckBoxes] = React.useState({\n    checked: false,\n    name: \"checked\"\n  });\n\n  const handleChange = event => {\n    setCheckBoxes({ ...checkBoxes,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BoxContext.Provider, {\n    value: {\n      checkBox: checkBoxes,\n      setCheckBoxes: handleChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckBoxProvider, \"Z8LeHxTGHRADE8EpWnQv5/k3jDU=\");\n\n_c = CheckBoxProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxProvider\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/CheckBoxContext.tsx"],"names":["React","BoxContext","createContext","undefined","CheckBoxProvider","children","checkBoxes","setCheckBoxes","useState","checked","name","handleChange","event","target","checkBox"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAwBA,OAAO,MAAMC,UAAU,gBAAGD,KAAK,CAACE,aAAN,CACtBC,SADsB,CAAnB;AAML,OAAO,SAASC,gBAAT,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAA4C;AAAA;;AACjD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,KAAK,CAACQ,QAAN,CAAe;AAC/CC,IAAAA,OAAO,EAAE,KADsC;AAE/CC,IAAAA,IAAI,EAAE;AAFyC,GAAf,CAApC;;AAKE,QAAMC,YAAY,GAAIC,KAAD,IAAgD;AACnEL,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiB,OAACM,KAAK,CAACC,MAAN,CAAaH,IAAd,GAAqBE,KAAK,CAACC,MAAN,CAAaJ;AAAnD,KAAD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAACK,MAAAA,QAAQ,EAAER,UAAX;AAAuBC,MAAAA,aAAa,EAACI;AAArC,KAA5B;AAAA,cACGN;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAMC;;GAhBWD,gB;;KAAAA,gB","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\n\nexport interface checkBoz {\n    name: string;\n    checked: boolean }\n  /*  checkedB: boolean, */\n  /*  checkedC: boolean, */\n  \n\nexport interface IBoxContext {\n    checkBox: checkBoz;\n    setCheckBoxes: (\n        checked: React.ChangeEvent<HTMLInputElement>\n        /* checkedB: React.ChangeEvent<HTMLInputElement>, */\n        /* checkedC: React.ChangeEvent<HTMLInputElement>, */) => void\n    }\n\n  \n\nexport const BoxContext = React.createContext<IBoxContext | undefined>(\n    undefined\n  );\n\n  type Props = {children: React.ReactNode};\n\n  export function CheckBoxProvider({children}: Props){\n    const [checkBoxes, setCheckBoxes] = React.useState({\n        checked: false,\n        name: \"checked\"\n      });\n      \n      const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setCheckBoxes({ ...checkBoxes, [event.target.name]: event.target.checked });\n      };\n\n      return (\n        <BoxContext.Provider value={{checkBox: checkBoxes, setCheckBoxes:handleChange}}>\n          {children}\n        </BoxContext.Provider>\n      );\n  \n      }\n\n    \n    \n    \n    \n    \n    \n    \n      "]},"metadata":{},"sourceType":"module"}