{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/prod.tsx\",\n    _s = $RefreshSig$();\n\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Prod = productId => {\n  _s();\n\n  const getProduct = async () => await (await fetch('http://localhost:3000/products/2')).json();\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('product', getProduct);\n  console.log(data);\n  console.log('product');\n  console.log(getProduct);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prdataduct-des\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"name\",\n      children: data === null || data === void 0 ? void 0 : data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: data === null || data === void 0 ? void 0 : data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          item: item,\n          handleAddToCart: handleAddToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 8\n        }, this)\n      }, item.productId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 11\n  }, this);\n};\n/* console.log(d) */\n\n/* const [isLoading, setIsLoading] = useState(true); */\n\n/* const [data, setData] = useState([] as CartItemType[]); */\n\n/* useEffect(() => { */\n\n/*   fetch(`http://localhost:3000/products/2`) */\n\n/*     .then((res) => res.json()) */\n\n/*     .then((data) => { */\n\n/*       setData(data); */\n\n/*       setIsLoading(false); */\n\n/*       console.log(`http://localhost:3000/products/1`) */\n\n/*     }) */\n\n/*     .catch((error) => console.log(error)); */\n\n/* }, [data]); */\n\n/* const Prod = (productId: any) => { */\n\n/*   const [isLoading, setIsLoading] = useState(true); */\n\n/*   const [data, setData] = useState([] as CartItemType[]); */\n\n/*   useEffect(() => { */\n\n/*     fetch(`http://localhost:3000/products/${productId}`, {}) */\n\n/*       .then((res) => res.json()) */\n\n/*       .then((response) => { */\n\n/*         setData(response); */\n\n/*         setIsLoading(false); */\n\n/*         console.log(`http://localhost:3000/products/${productId}`) */\n\n/*       }) */\n\n/*       .catch((error) => console.log(error)); */\n\n/*   }, [productId]); */\n\n/*  */\n\n\n_s(Prod, \"RfG8gpBHsnG9psDyjbLfXsplOoo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Prod;\nexport default Prod;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prod\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/prod.tsx"],"names":["Grid","React","useQuery","Prod","productId","getProduct","fetch","json","data","isLoading","error","console","log","name","map","item","handleAddToCart"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAiBE,MAAMC,IAAI,GAAIC,SAAD,IAAoB;AAAA;;AAEjC,QAAMC,UAAU,GAAG,YACnB,MAAM,CAAC,MAAMC,KAAK,CAAC,kCAAD,CAAZ,EAAkDC,IAAlD,EADN;;AAGA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,SAAP;AAAkBC,IAAAA;AAAlB,MAA4BR,QAAQ,CACxC,SADwC,EAExCG,UAFwC,CAA1C;AAKAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AAEA,sBACQ;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACG;AAAI,MAAA,EAAE,EAAC,MAAP;AAAA,gBAAeG,IAAf,aAAeA,IAAf,uBAAeA,IAAI,CAAEK;AAArB;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACTL,IADS,aACTA,IADS,uBACTA,IAAI,CAAEM,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAgC,QAAA,EAAE,EAAE,EAApC;AAAwC,QAAA,EAAE,EAAE,CAA5C;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,IAAZ;AAAkB,UAAA,eAAe,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF,SAAgBD,IAAI,CAACX,SAArB;AAAA;AAAA;AAAA;AAAA,cADD;AADS;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAcK,CA5BL;AA0CI;;AACN;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;GAxEQD,I;UAK4BD,Q;;;KAL5BC,I;AA2ER,eAAeA,IAAf","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Link, BrowserRouter as Router, Route } from \"react-router-dom\";\n/* import { CartItemType } from \"./allproducts\"; */\n\n/* const getProducts = async (): Promise<CartItemType[]> => */\n/*   await (await fetch('http://localhost:3000/products/info')).json(); */\n  \n  type CartItemType = {\n    productId: number;\n    category: string;\n    description: string;\n    img_path: string;\n    price: number;\n    name: string;\n    quantity: number;\n  };\n\n  const Prod = (productId: any) => {\n\n  const getProduct = async (): Promise<CartItemType[]> =>\n  await (await fetch('http://localhost:3000/products/2')).json(); \n  \n  const {data, isLoading, error } = useQuery<CartItemType[]>(\n    'product',\n    getProduct\n  );\n  \n  console.log(data);\n  console.log('product')\n  console.log(getProduct);\n\n  return (\n          <div className=\"prdataduct-des\">\n             <h1 id=\"name\">{data?.name}</h1>\n             <Grid container spacing={3}>\n   {data?.map(item => (\n     <Grid item key={item.productId} xs={12} sm={3}>\n       <Item item={item} handleAddToCart={handleAddToCart} />\n     </Grid>\n   ))}\n </Grid>\n              {/*  <h1 id=\"name\">{e.name}</h1> */}\n              {/* <button className=\"btn add\">Add to cart</button> */}\n          </div>\n        );\n      }\n\n\n\n\n\n\n\n\n\n\n\n\n\n      /* console.log(d) */\n/* const [isLoading, setIsLoading] = useState(true); */\n/* const [data, setData] = useState([] as CartItemType[]); */\n/* useEffect(() => { */\n/*   fetch(`http://localhost:3000/products/2`) */\n/*     .then((res) => res.json()) */\n/*     .then((data) => { */\n/*       setData(data); */\n/*       setIsLoading(false); */\n/*       console.log(`http://localhost:3000/products/1`) */\n/*     }) */\n/*     .catch((error) => console.log(error)); */\n/* }, [data]); */\n\n\n\n\n/* const Prod = (productId: any) => { */\n/*   const [isLoading, setIsLoading] = useState(true); */\n/*   const [data, setData] = useState([] as CartItemType[]); */\n/*   useEffect(() => { */\n/*     fetch(`http://localhost:3000/products/${productId}`, {}) */\n/*       .then((res) => res.json()) */\n/*       .then((response) => { */\n/*         setData(response); */\n/*         setIsLoading(false); */\n/*         console.log(`http://localhost:3000/products/${productId}`) */\n/*       }) */\n/*       .catch((error) => console.log(error)); */\n/*   }, [productId]); */\n/*  */\n\n\nexport default Prod;"]},"metadata":{},"sourceType":"module"}