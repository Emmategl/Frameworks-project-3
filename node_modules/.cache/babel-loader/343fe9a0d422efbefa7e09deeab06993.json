{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/Cart/Cart.tsx\",\n    _s = $RefreshSig$();\n\nimport CartItem from '../CartItem/CartItem';\nimport { Wrapper } from './Cart.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = ({\n  cartItems,\n  addToCart,\n  removeFromCart,\n  removeFromCart2\n}) => {\n  _s();\n\n  const calculateTotal = items => items.reduce((ack, item) => ack + item.quantity * item.price, 0);\n\n  const formContext = useContext(FormContext);\n  if (!formContext) throw new Error(\"FormContext is undefined!\");\n  let firstName = formContext.form.firstName;\n  let lastName = formContext.form.lastName;\n  let email = formContext.form.email;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items in cart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 33\n    }, this) : null, cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: item,\n      addToCart: addToCart,\n      removeFromCart: removeFromCart,\n      removeFromCart2: removeFromCart2\n    }, item.productId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total: $\", calculateTotal(cartItems).toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"PcqHVQMN7gMwJTcYWIt9tOKJP/0=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/Cart/Cart.tsx"],"names":["CartItem","Wrapper","Cart","cartItems","addToCart","removeFromCart","removeFromCart2","calculateTotal","items","reduce","ack","item","quantity","price","formContext","useContext","FormContext","Error","firstName","form","lastName","email","length","map","productId","toFixed"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SAASC,OAAT,QAAwB,eAAxB;;;AAUA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,cAAxB;AAAwCC,EAAAA;AAAxC,CAAD,KAA+D;AAAA;;AAC3F,QAAMC,cAAc,GAAIC,KAAD,IACrBA,KAAK,CAACC,MAAN,CAAa,CAACC,GAAD,EAAcC,IAAd,KAAuBD,GAAG,GAAGC,IAAI,CAACC,QAAL,GAAgBD,IAAI,CAACE,KAA/D,EAAsE,CAAtE,CADF;;AAGE,QAAOC,WAAW,GAAGC,UAAU,CAACC,WAAD,CAA/B;AACA,MAAI,CAACF,WAAL,EACE,MAAM,IAAIG,KAAJ,CAAU,2BAAV,CAAN;AAEF,MAAIC,SAAS,GAAGJ,WAAW,CAACK,IAAZ,CAAiBD,SAAjC;AACA,MAAIE,QAAQ,GAAGN,WAAW,CAACK,IAAZ,CAAiBC,QAAhC;AACA,MAAIC,KAAK,GAAGP,WAAW,CAACK,IAAZ,CAAiBE,KAA7B;AAEF,sBACE,QAAC,OAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGlB,SAAS,CAACmB,MAAV,KAAqB,CAArB,gBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB,GAAoD,IAFvD,EAGGnB,SAAS,CAACoB,GAAV,CAAcZ,IAAI,iBACjB,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,MAAA,SAAS,EAAEP,SAHb;AAIE,MAAA,cAAc,EAAEC,cAJlB;AAKE,MAAA,eAAe,EAAEC;AALnB,OACOK,IAAI,CAACa,SADZ;AAAA;AAAA;AAAA;AAAA,YADD,CAHH,eAYE;AAAA,6BAAajB,cAAc,CAACJ,SAAD,CAAd,CAA0BsB,OAA1B,CAAkC,CAAlC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA5BD;;GAAMvB,I;;KAAAA,I;AA8BN,eAAeA,IAAf","sourcesContent":["import CartItem from '../CartItem/CartItem';\nimport { Wrapper } from './Cart.styles';\nimport { CartItemType } from '../CartItemType';\n\nexport type Props =  {\n  cartItems: CartItemType[];\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n  removeFromCart2: (id: number) => void;\n};\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart, removeFromCart2 }) => {\n  const calculateTotal = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.quantity * item.price, 0);\n\n    const  formContext = useContext(FormContext)\n    if (!formContext)\n      throw(new Error(\"FormContext is undefined!\"))\n      \n    let firstName = formContext.form.firstName;\n    let lastName = formContext.form.lastName;\n    let email = formContext.form.email;\n\n  return (\n    <Wrapper>\n      <h2>Your Shopping Cart</h2>\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\n      {cartItems.map(item => (\n        <CartItem\n          key={item.productId}\n          item={item}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n          removeFromCart2={removeFromCart2}\n        />\n      ))}\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n    </Wrapper>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}