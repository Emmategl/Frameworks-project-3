{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nexport const NameContext = /*#__PURE__*/React.createContext(undefined);\nexport const init = {\n  firstName: \"\"\n};\nexport function useName() {\n  _s();\n\n  return useContext(NameContext);\n}\n/* export const NameProvider = ({children}: Props) => {\nconst [name, setName] = useState<Name>(init)\nconst setNameFun = (firstName: string) => {\n    setName((prev) => ({...prev, ...{firstname:firstName}})) \n  }\n\nreturn (\n    <NameContext.Provider value={{firstName:name, setName:setNameFun}}>\n    {children}\n    </NameContext.Provider>\n)\n\n}\n\nfunction useContext(NameContext: React.Context<ILoginContext | undefined>) {\n    throw new Error(\"Function not implemented.\");\n}\n\nfunction useState<T>(init: { firstName: string; }): [any, any] {\n    throw new Error(\"Function not implemented.\");\n}\n\n */\n\n_s(useName, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Pages/Login/NameContext.tsx"],"names":["React","NameContext","createContext","undefined","init","firstName","useName","useContext"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAWA,OAAO,MAAMC,WAAW,gBAAGD,KAAK,CAACE,aAAN,CAA+CC,SAA/C,CAApB;AAEP,OAAO,MAAMC,IAAI,GAAG;AAChBC,EAAAA,SAAS,EAAE;AADK,CAAb;AAMP,OAAO,SAASC,OAAT,GAAkB;AAAA;;AACrB,SAAOC,UAAU,CAACN,WAAD,CAAjB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA1BgBK,O","sourcesContent":["import React from \"react\";\n\nexport interface Name {\n    firstName: string,\n}\n\nexport interface ILoginContext {\n    firstName: Name;\n    setName: (firstName:string) => void\n}\n\nexport const NameContext = React.createContext<ILoginContext | undefined>(undefined)\n\nexport const init = {\n    firstName: \"\",\n  }\n\ntype Props = {children: React.ReactNode};\n\nexport function useName(){\n    return useContext(NameContext)\n}\n\n/* export const NameProvider = ({children}: Props) => {\nconst [name, setName] = useState<Name>(init)\nconst setNameFun = (firstName: string) => {\n    setName((prev) => ({...prev, ...{firstname:firstName}})) \n  }\n\nreturn (\n    <NameContext.Provider value={{firstName:name, setName:setNameFun}}>\n    {children}\n    </NameContext.Provider>\n)\n\n}\n\nfunction useContext(NameContext: React.Context<ILoginContext | undefined>) {\n    throw new Error(\"Function not implemented.\");\n}\n\nfunction useState<T>(init: { firstName: string; }): [any, any] {\n    throw new Error(\"Function not implemented.\");\n}\n\n */"]},"metadata":{},"sourceType":"module"}