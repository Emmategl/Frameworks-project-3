{"ast":null,"code":"export const getBasket = async () => await (await fetch('http://localhost:3000/customers/1/basketDetails')).json();\nexport const getProducts = async () => await (await fetch('http://localhost:3000/products/info')).json();\n\nfunction FriendStatus(props) {}\n\n_c = FriendStatus;\nexport async function handleAddToCart(clickedItem) {\n  try {\n    const isItemInCart = (await getBasket()).some(item => item.productId === clickedItem.productId);\n\n    if (isItemInCart) {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + clickedItem.productId + \"/1\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      return;\n    }\n\n    const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        productId: clickedItem.productId,\n        quantity: 1\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    });\n    let data = await response.json();\n    alert(\"Item Added To Cart\");\n    return setCartItems(prev => [...prev, clickedItem]);\n  } catch (err) {\n    alert(\"Something Went Wrong\");\n    console.log(err);\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendStatus\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/addToBasket.tsx"],"names":["getBasket","fetch","json","getProducts","FriendStatus","props","handleAddToCart","clickedItem","isItemInCart","some","item","productId","response","method","headers","body","JSON","stringify","quantity","data","alert","setCartItems","prev","err","console","log"],"mappings":"AAKA,OAAO,MAAMA,SAAS,GAAG,YACzB,MAAM,CAAC,MAAMC,KAAK,CAAC,iDAAD,CAAZ,EAAiEC,IAAjE,EADC;AAGP,OAAO,MAAMC,WAAW,GAAG,YAC3B,MAAM,CAAC,MAAMF,KAAK,CAAC,qCAAD,CAAZ,EAAqDC,IAArD,EADC;;AAIP,SAASE,YAAT,CAAsBC,KAAtB,EAA6B,CAAE;;KAAtBD,Y;AAIT,OAAO,eAAeE,eAAf,CAA+BC,WAA/B,EAA0D;AAE7D,MAAI;AACF,UAAMC,YAAY,GAAG,CAAC,MAAMR,SAAS,EAAhB,EAAoBS,IAApB,CAAyBC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmBJ,WAAW,CAACI,SAAhE,CAArB;;AACA,QAAIH,YAAJ,EAAkB;AAChB,YAAMI,QAAQ,GAAG,MAAMX,KAAK,CAAC,8CAA8CM,WAAW,CAACI,SAA1D,GAAsE,IAAvE,EAA6E;AACvGE,QAAAA,MAAM,EAAE,KAD+F;AAEvGC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAF8F,OAA7E,CAA5B;AAMA;AACD;;AACD,UAAMF,QAAQ,GAAG,MAAMX,KAAK,CAAC,0CAAD,EAA6C;AACvEY,MAAAA,MAAM,EAAE,MAD+D;AAEvEE,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,QAAAA,SAAS,EAAEJ,WAAW,CAACI,SADJ;AAEnBO,QAAAA,QAAQ,EAAE;AAFS,OAAf,CAFiE;AAMvEJ,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAN8D,KAA7C,CAA5B;AAUA,QAAIK,IAAI,GAAG,MAAMP,QAAQ,CAACV,IAAT,EAAjB;AACAkB,IAAAA,KAAK,CAAC,oBAAD,CAAL;AACA,WAAOC,YAAY,CAAEC,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUf,WAAV,CAAX,CAAnB;AACD,GAxBD,CAwBE,OAAOgB,GAAP,EAAY;AACZH,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { CartItemType } from \"./allproducts\";\n\nexport const getBasket = async (): Promise<CartItemType[]> =>\nawait (await fetch('http://localhost:3000/customers/1/basketDetails')).json();\n\nexport const getProducts = async (): Promise<CartItemType[]> =>\nawait (await fetch('http://localhost:3000/products/info')).json();\n\n\nfunction FriendStatus(props) {}\n\n\n\nexport async function handleAddToCart(clickedItem: CartItemType) {\n \n    try {\n      const isItemInCart = (await getBasket()).some(item => item.productId === clickedItem.productId); \n      if (isItemInCart) {\n        const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + clickedItem.productId + \"/1\", {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n          },\n        });\n        return\n      } \n      const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          productId: clickedItem.productId,\n          quantity: 1,\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n      let data = await response.json();\n      alert(\"Item Added To Cart\");\n      return setCartItems((prev) => [...prev, clickedItem])\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}