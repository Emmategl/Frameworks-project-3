{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Pages/Login/Context.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(undefined);\nexport const Provider = props => {\n  _s();\n\n  // Initial values are obtained from the props\n  const {\n    name: initialName,\n    children\n  } = props; // Use State to keep the values\n\n  const [name, setName] = useState(initialName);\n\n  const changeName = name => {\n    const newUser = {\n      name: name\n    };\n    setName(newUser);\n  }; // Make the context object:\n\n\n  const nameContext = {\n    name,\n    setName,\n    changeName,\n    firstName,\n    lastName,\n    email\n  }; // pass the value in provider and return\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: nameContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Provider, \"FJRqVsKk2XfDX0OWcrVW8cqlsPc=\");\n\n_c = Provider;\nexport const {\n  Consumer\n} = UserContext;\nProvider.propTypes = {\n  name: PropTypes.string\n};\nProvider.defaultProps = {\n  name: []\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Pages/Login/Context.tsx"],"names":["React","createContext","useState","PropTypes","UserContext","undefined","Provider","props","name","initialName","children","setName","changeName","newUser","nameContext","firstName","lastName","email","Consumer","propTypes","string","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAQA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CACpCI,SADoC,CAAjC;AAIP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAA0C;AAAA;;AAChE;AACA,QAAM;AACJC,IAAAA,IAAI,EAAEC,WADF;AAEJC,IAAAA;AAFI,MAGFH,KAHJ,CAFgE,CAOhE;;AACA,QAAM,CAACC,IAAD,EAAOG,OAAP,IAAkBT,QAAQ,CAACO,WAAD,CAAhC;;AAIA,QAAMG,UAAU,GAAIJ,IAAD,IAAe;AAChC,UAAMK,OAAO,GAAG;AAAEL,MAAAA,IAAI,EAAEA;AAAR,KAAhB;AACAG,IAAAA,OAAO,CAACE,OAAD,CAAP;AACD,GAHD,CAZgE,CAiBhE;;;AACA,QAAMC,WAAW,GAAG;AAClBN,IAAAA,IADkB;AAElBG,IAAAA,OAFkB;AAGlBC,IAAAA,UAHkB;AAIlBG,IAAAA,SAJkB;AAKlBC,IAAAA,QALkB;AAMlBC,IAAAA;AANkB,GAApB,CAlBgE,CA2BhE;;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEH,WAA7B;AAAA,cAA2CJ;AAA3C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA7BM;;GAAMJ,Q;;KAAAA,Q;AA+Bb,OAAO,MAAM;AAAEY,EAAAA;AAAF,IAAed,WAArB;AAEPE,QAAQ,CAACa,SAAT,GAAqB;AACnBX,EAAAA,IAAI,EAAEL,SAAS,CAACiB;AADG,CAArB;AAIAd,QAAQ,CAACe,YAAT,GAAwB;AACtBb,EAAAA,IAAI,EAAE;AADgB,CAAxB","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport interface nameContext {\n    firstName: string,\n    lastName: string,\n    email: string,\n  }\n\nexport const UserContext = createContext<nameContext | undefined>(\n    undefined\n  );\n\nexport const Provider = (props: { name: any; children: any; }) => {\n  // Initial values are obtained from the props\n  const {\n    name: initialName,\n    children\n  } = props;\n\n  // Use State to keep the values\n  const [name, setName] = useState(initialName);\n\n\n  \n  const changeName = (name: any) => {\n    const newUser = { name: name };\n    setName(newUser);\n  };\n\n  // Make the context object:\n  const nameContext = {\n    name,\n    setName,\n    changeName,\n    firstName,\n    lastName,\n    email,\n  };\n\n  // pass the value in provider and return\n  return <UserContext.Provider value={nameContext}>{children}</UserContext.Provider>;\n};\n\nexport const { Consumer } = UserContext;\n\nProvider.propTypes = {\n  name: PropTypes.string\n};\n\nProvider.defaultProps = {\n  name: []\n};"]},"metadata":{},"sourceType":"module"}