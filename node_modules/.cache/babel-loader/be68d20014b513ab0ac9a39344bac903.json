{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/Checkbox.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 30\n}, this));\nexport default function CheckboxLabels() {\n  _s();\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    row: true,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedA,\n        onChange: handleChange,\n        name: \"checkedA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this),\n      label: \"Secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedB,\n        onChange: handleChange,\n        name: \"checkedB\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this),\n      label: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n        checked: state.checkedG,\n        onChange: handleChange,\n        name: \"checkedG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this),\n      label: \"Custom color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxLabels, \"PUpkqKe+0dGeoiDL+DQ3ezN1YQI=\");\n\n_c = CheckboxLabels;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxLabels\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/Checkbox.tsx"],"names":["React","withStyles","green","FormGroup","FormControlLabel","Checkbox","GreenCheckbox","root","color","checked","props","CheckboxLabels","state","setState","useState","checkedA","checkedB","checkedF","checkedG","handleChange","event","target","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAwC,4BAAxC;;AAMA,MAAMC,aAAa,GAAGL,UAAU,CAAC;AAC/BM,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAEN,KAAK,CAAC,GAAD,CADR;AAEJ,iBAAa;AACXM,MAAAA,KAAK,EAAEN,KAAK,CAAC,GAAD;AADD;AAFT,GADyB;AAO/BO,EAAAA,OAAO,EAAE;AAPsB,CAAD,CAAV,CAQlBC,KAAD,iBAA0B,QAAC,QAAD;AAAU,EAAA,KAAK,EAAC,SAAhB;AAAA,KAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,QARP,CAAtB;AAUA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACc,QAAN,CAAe;AACvCC,IAAAA,QAAQ,EAAE,IAD6B;AAEvCC,IAAAA,QAAQ,EAAE,IAF6B;AAGvCC,IAAAA,QAAQ,EAAE,IAH6B;AAIvCC,IAAAA,QAAQ,EAAE;AAJ6B,GAAf,CAA1B;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAgD;AACnEP,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaZ;AAA9C,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,GAAG,MAAd;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO,eAAE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEG,KAAK,CAACG,QAAzB;AAAmC,QAAA,QAAQ,EAAEI,YAA7C;AAA2D,QAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,cADX;AAEE,MAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,gBAAD;AACE,MAAA,OAAO,eACL,QAAC,QAAD;AACE,QAAA,OAAO,EAAEP,KAAK,CAACI,QADjB;AAEE,QAAA,QAAQ,EAAEG,YAFZ;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cAFJ;AASE,MAAA,KAAK,EAAC;AATR;AAAA;AAAA;AAAA;AAAA,YALF,eAgBE,QAAC,gBAAD;AACE,MAAA,OAAO,eACP,QAAC,aAAD;AACA,QAAA,OAAO,EAAEP,KAAK,CAACM,QADf;AAEA,QAAA,QAAQ,EAAEC,YAFV;AAGA,QAAA,IAAI,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,cAFF;AAME,MAAA,KAAK,EAAC;AANR;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAvCuBR,c;;KAAAA,c","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n\nexport default function CheckboxLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={<Checkbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n        label=\"Secondary\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedB}\n            onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Primary\"\n      />\n      <FormControlLabel\n        control={\n        <GreenCheckbox\n        checked={state.checkedG}\n        onChange={handleChange}\n        name=\"checkedG\" />}\n        label=\"Custom color\"\n      />\n    </FormGroup>\n  );\n}"]},"metadata":{},"sourceType":"module"}