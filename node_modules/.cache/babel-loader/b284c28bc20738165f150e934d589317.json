{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Pages/Login/Context.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport const Provider = props => {\n  _s();\n\n  // Initial values are obtained from the props\n  const user = useState({\n    name: \"\"\n  }); // Use State to keep the values\n\n  const [name, setName] = useState(user); // Make the context object:\n\n  const nameContext = {\n    name,\n    setName,\n    changeName\n  }; // pass the value in provider and return\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: nameContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Provider, \"/LTDXpV52zcFo+EOhdBLEn3hGUI=\");\n\n_c = Provider;\nexport const {\n  Consumer\n} = UserContext;\nProvider.propTypes = {\n  name: PropTypes.string\n};\nProvider.defaultProps = {\n  name: []\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Pages/Login/Context.tsx"],"names":["React","createContext","useState","PropTypes","UserContext","Provider","props","user","name","setName","nameContext","changeName","children","Consumer","propTypes","string","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,MAAMI,QAAQ,GAAIC,KAAD,IAA0C;AAAA;;AAChE;AACA,QAAMC,IAAI,GAAGL,QAAQ,CAAC;AACpBM,IAAAA,IAAI,EAAE;AADc,GAAD,CAArB,CAFgE,CAMhE;;AACA,QAAM,CAACA,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACK,IAAD,CAAhC,CAPgE,CAShE;;AACA,QAAMG,WAAW,GAAG;AAClBF,IAAAA,IADkB;AAElBC,IAAAA,OAFkB;AAGlBE,IAAAA;AAHkB,GAApB,CAVgE,CAgBhE;;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,WAA7B;AAAA,cAA2CE;AAA3C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBM;;GAAMP,Q;;KAAAA,Q;AAoBb,OAAO,MAAM;AAAEQ,EAAAA;AAAF,IAAeT,WAArB;AAEPC,QAAQ,CAACS,SAAT,GAAqB;AACnBN,EAAAA,IAAI,EAAEL,SAAS,CAACY;AADG,CAArB;AAIAV,QAAQ,CAACW,YAAT,GAAwB;AACtBR,EAAAA,IAAI,EAAE;AADgB,CAAxB","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const UserContext = createContext({});\n\nexport const Provider = (props: { name: any; children: any; }) => {\n  // Initial values are obtained from the props\n  const user = useState({\n    name: \"\",\n  });\n\n  // Use State to keep the values\n  const [name, setName] = useState(user);\n\n  // Make the context object:\n  const nameContext = {\n    name,\n    setName,\n    changeName\n  };\n\n  // pass the value in provider and return\n  return <UserContext.Provider value={nameContext}>{children}</UserContext.Provider>;\n};\n\nexport const { Consumer } = UserContext;\n\nProvider.propTypes = {\n  name: PropTypes.string\n};\n\nProvider.defaultProps = {\n  name: []\n};"]},"metadata":{},"sourceType":"module"}