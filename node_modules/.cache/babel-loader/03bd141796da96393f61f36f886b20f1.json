{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/Checkbox.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { BoxContext } from './CheckBoxContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleC = event => {\n  setCheckBoxes(prev => ({ ...prev,\n    ...{\n      email: event.target.value\n    }\n  }));\n};\n\nexport function CheckBox() {\n  _s();\n\n  const boxContext = useContext(BoxContext);\n  if (!boxContext) throw new Error(\"FormContext is undefined!\");\n  let checkedA = boxContext.checkBox.checkedA;\n  let checkedB = boxContext.checkBox.checkedB;\n  let checkedC = boxContext.checkBox.checkedC;\n  const [state, setCheckBoxes] = React.useState({\n    checkedA: checkedA,\n    checkedB: checkedB,\n    checkedC: checkedC\n  });\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    row: true,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedA,\n        onChange: handleC,\n        name: \"checkedA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this),\n      label: \"Secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedB,\n        onChange: handleC,\n        name: \"checkedB\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this),\n      label: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedC,\n        onChange: handleC,\n        name: \"checkedC\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this),\n      label: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckBox, \"b+Cyw/U/5RCCjxM8sFuJZVkHACk=\");\n\n_c = CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/Checkbox.tsx"],"names":["React","useContext","FormGroup","FormControlLabel","Checkbox","BoxContext","handleC","event","setCheckBoxes","prev","email","target","value","CheckBox","boxContext","Error","checkedA","checkBox","checkedB","checkedC","state","useState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAwC,4BAAxC;AACA,SAASC,UAAT,QAAqC,mBAArC;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAgD;AAC5DC,EAAAA,aAAa,CAAEC,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAAG;AAAEC,MAAAA,KAAK,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAAtB;AAAd,GAAX,CAAD,CAAb;AACH,CAFD;;AAKA,OAAO,SAASC,QAAT,GAAmB;AAAA;;AACtB,QAAMC,UAAU,GAAGb,UAAU,CAACI,UAAD,CAA7B;AAEJ,MAAI,CAACS,UAAL,EACE,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACA,MAAIC,QAAQ,GAAGF,UAAU,CAACG,QAAX,CAAoBD,QAAnC;AACA,MAAIE,QAAQ,GAAGJ,UAAU,CAACG,QAAX,CAAoBC,QAAnC;AACA,MAAIC,QAAQ,GAAGL,UAAU,CAACG,QAAX,CAAoBE,QAAnC;AACA,QAAM,CAACC,KAAD,EAAQZ,aAAR,IAAyBR,KAAK,CAACqB,QAAN,CAAyB;AAAEL,IAAAA,QAAQ,EAAEA,QAAZ;AAAsBE,IAAAA,QAAQ,EAAEA,QAAhC;AAA0CC,IAAAA,QAAQ,EAAEA;AAApD,GAAzB,CAA/B;AAKA,sBACE,QAAC,SAAD;AAAW,IAAA,GAAG,MAAd;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO,eACP,QAAC,QAAD;AACA,QAAA,OAAO,EAAEC,KAAK,CAACJ,QADf;AAEA,QAAA,QAAQ,EAAEV,OAFV;AAGA,QAAA,IAAI,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,cAFF;AAME,MAAA,KAAK,EAAC;AANR;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,gBAAD;AACE,MAAA,OAAO,eACL,QAAC,QAAD;AACE,QAAA,OAAO,EAAEc,KAAK,CAACF,QADjB;AAEE,QAAA,QAAQ,EAAEZ,OAFZ;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cAFJ;AASE,MAAA,KAAK,EAAC;AATR;AAAA;AAAA;AAAA;AAAA,YATF,eAoBG,QAAC,gBAAD;AACC,MAAA,OAAO,eACN,QAAC,QAAD;AACG,QAAA,OAAO,EAAEc,KAAK,CAACD,QADlB;AAEG,QAAA,QAAQ,EAAEb,OAFb;AAGG,QAAA,IAAI,EAAC,UAHR;AAIG,QAAA,KAAK,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,cAFF;AASC,MAAA,KAAK,EAAC;AATP;AAAA;AAAA;AAAA;AAAA,YApBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GA/CeO,Q;;KAAAA,Q","sourcesContent":["import React, { useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\nimport { BoxContext, checkBoz } from './CheckBoxContext';\n\nconst handleC = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCheckBoxes((prev) => ({ ...prev, ...{ email: event.target.value } }));\n};\n\n\nexport function CheckBox(){\n    const boxContext = useContext(BoxContext)\n\nif (!boxContext)\n  throw(new Error(\"FormContext is undefined!\"))\n  let checkedA = boxContext.checkBox.checkedA;\n  let checkedB = boxContext.checkBox.checkedB;\n  let checkedC = boxContext.checkBox.checkedC;\n  const [state, setCheckBoxes] = React.useState<checkBoz>({ checkedA: checkedA, checkedB: checkedB, checkedC: checkedC});\n\n\n\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n        <Checkbox\n        checked={state.checkedA}\n        onChange={handleC}\n        name=\"checkedA\" />}\n        label=\"Secondary\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedB}\n            onChange={handleC}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Primary\"\n      />\n       <FormControlLabel\n        control={\n         <Checkbox\n            checked={state.checkedC}\n            onChange={handleC}\n            name=\"checkedC\"\n            color=\"primary\"\n        />\n     }\n        label=\"Primary\"\n />\n    </FormGroup>\n  );\n}"]},"metadata":{},"sourceType":"module"}