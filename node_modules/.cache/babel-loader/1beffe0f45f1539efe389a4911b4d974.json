{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/allproducts.tsx\";\nimport { useState } from 'react';\nimport { useQuery } from 'react-query'; // Components\n\nimport Item from '../Item/Item';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\n// Styles\nimport { Wrapper } from '../App.styles';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Foo {\n  constructor() {\n    var _s = $RefreshSig$();\n\n    this.getProducts = async () => await (await fetch('http://localhost:3000/products/info')).json();\n\n    this.getBasket = async () => await (await fetch('http://localhost:3000/customers/1/basketDetails')).json();\n\n    this.ProductList = _s(() => {\n      _s();\n\n      const [cartItemss, setCartItems] = useState([]);\n      React.useEffect(() => {\n        fetch('http://localhost:3000/customers/1/basketDetails').then(response => response.json()).then(cartItemss => {\n          setCartItems(cartItemss);\n        });\n      }, [cartItemss]);\n      const {\n        data,\n        isLoading,\n        error\n      } = useQuery('products', this.getProducts);\n\n      async function handleAddToCart(clickedItem) {\n        try {\n          const isItemInCart = (await this.getBasket()).some(item => item.productId === clickedItem.productId);\n\n          if (isItemInCart) {\n            const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + clickedItem.productId + \"/1\", {\n              method: \"PUT\",\n              headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n              }\n            });\n            return;\n          }\n\n          const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n            method: \"POST\",\n            body: JSON.stringify({\n              productId: clickedItem.productId,\n              quantity: 1\n            }),\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n          });\n          let data = await response.json();\n          alert(\"Item Added To Cart\");\n          return setCartItems(prev => [...prev, clickedItem]);\n        } catch (err) {\n          alert(\"Something Went Wrong\");\n          console.log(err);\n        }\n      }\n\n      if (isLoading) return /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this);\n      if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Something went wrong ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"All of our products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"At 'Hot Liquids' you will always find a good selection of really delicious completely freshly roasted specialty coffee and tea in many flavours. We only sell coffee beans of the highest quality, so if you are looking for freshly roasted filter or espresso coffee, have a look at our large selection. We not only select our coffee carefully, but also our selection of teas. That is why you can find a wide range of exclusive and tasty teas with us. Are you mostly into green, black or white tea? We have many exciting flavors and types of tea, so you can find the one that suits your taste buds. We only deal with the best suppliers so we can ensure that you get the best possible quality. We only deal with the best suppliers so we can ensure that you get the best possible quality.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: data === null || data === void 0 ? void 0 : data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              item: item,\n              handleAddToCart: handleAddToCart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this)\n          }, item.productId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this);\n    }, \"IOXSw/miW6IbVJQbCxDG72Wgv0o=\", false, function () {\n      return [useQuery];\n    });\n  }\n\n}\n/* export default ProductList; */","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/allproducts.tsx"],"names":["useState","useQuery","Item","LinearProgress","Grid","Wrapper","React","Foo","getProducts","fetch","json","getBasket","ProductList","cartItemss","setCartItems","useEffect","then","response","data","isLoading","error","handleAddToCart","clickedItem","isItemInCart","some","item","productId","method","headers","body","JSON","stringify","quantity","alert","prev","err","console","log","map"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { QueryKey, useQuery, UseQueryOptions } from 'react-query';\n// Components\nimport Item from '../Item/Item';\nimport Cart from '../Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n// Styles\nimport { Wrapper, StyledButton } from '../App.styles';\nimport { useEffect } from 'react';\nimport React from 'react';\nimport { kStringMaxLength } from 'node:buffer';\nimport { Link } from 'react-router-dom';\n\n// Types\nexport type CartItemType = {\n  productId: number;\n  category: string;\n  description: string;\n  img_path: string;\n  price: number;\n  name: string;\n  quantity: number;\n};\n\nexport class Foo {\n\ngetProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('http://localhost:3000/products/info')).json();\n\ngetBasket = async (): Promise<CartItemType[]> =>\nawait (await fetch('http://localhost:3000/customers/1/basketDetails')).json();\n\n\n\n ProductList = () => {\n\nconst [cartItemss, setCartItems] = useState([] as CartItemType[]);\nReact.useEffect(() => {\n  fetch('http://localhost:3000/customers/1/basketDetails')\n    .then((response) => response.json())\n    .then((cartItemss) => {\n      setCartItems(cartItemss);\n    })\n}, [cartItemss]);\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    this.getProducts\n  );\n\n     async function handleAddToCart(clickedItem: CartItemType) {\n      try {\n        const isItemInCart = (await this.getBasket()).some((item: { productId: number; }) => item.productId === clickedItem.productId); \n        if (isItemInCart) {\n          const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + clickedItem.productId + \"/1\", {\n            method: \"PUT\",\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\",\n            },\n          });\n          return\n        } \n        const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            productId: clickedItem.productId,\n            quantity: 1,\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n          },\n        });\n        let data = await response.json();\n        alert(\"Item Added To Cart\");\n        return setCartItems((prev) => [...prev, clickedItem])\n      } catch (err) {\n        alert(\"Something Went Wrong\");\n        console.log(err);\n      }\n    }\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong ...</div>;\n\n  return (\n    <Wrapper>\n      <h1>All of our products</h1>\n      <p>At 'Hot Liquids' you will always find a good selection of really delicious completely freshly roasted specialty coffee\n        and tea in many flavours. We only sell coffee beans of the highest quality, so if you are looking for freshly roasted\n        filter or espresso coffee, have a look at our large selection. We not only select our coffee carefully, but also our\n        selection of teas. That is why you can find a wide range of exclusive and tasty teas with us. Are you mostly into green,\n        black or white tea? We have many exciting flavors and types of tea, so you can find the one that suits your taste buds.\n        We only deal with the best suppliers so we can ensure that you get the best possible quality.\n        We only deal with the best suppliers so we can ensure that you get the best possible quality.\n        </p>\n      <br></br>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.productId} xs={12} sm={3}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n}\n/* export default ProductList; */\n"]},"metadata":{},"sourceType":"module"}