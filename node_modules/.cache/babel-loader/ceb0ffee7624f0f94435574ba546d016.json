{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/Cart/Cart.tsx\",\n    _s = $RefreshSig$();\n\nimport CartItem from '../CartItem/CartItem';\nimport { Wrapper } from './Cart.styles';\nimport { useContext, useState } from 'react';\nimport { FormContext } from '../../Pages/Login/FormContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst init = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\"\n};\n\nconst Cart = ({\n  cartItems,\n  addToCart,\n  removeFromCart,\n  removeFromCart2\n}) => {\n  _s();\n\n  const calculateTotal = items => items.reduce((ack, item) => ack + item.quantity * item.price, 0);\n\n  const formContext = useContext(FormContext);\n  /* if (!formContext)\n    throw(new Error(\"FormContext is undefined!\")) */\n\n  let firstName = formContext === null || formContext === void 0 ? void 0 : formContext.form.firstName;\n  let lastName = formContext.form.lastName;\n  let email = formContext.form.email;\n  const [state, setState] = useState({\n    firstName: firstName,\n    lastName: lastName,\n    email: email\n  });\n  console.log(state === null || state === void 0 ? void 0 : state.email);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Your Shopping Cart \", state === null || state === void 0 ? void 0 : state.firstName, \" \", state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items in cart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }, this) : null, cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: item,\n      addToCart: addToCart,\n      removeFromCart: removeFromCart,\n      removeFromCart2: removeFromCart2\n    }, item.productId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total: $\", calculateTotal(cartItems).toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"7JGLHhZlDK/+mL4nNsmo/ctT6HM=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/Cart/Cart.tsx"],"names":["CartItem","Wrapper","useContext","useState","FormContext","init","firstName","lastName","email","Cart","cartItems","addToCart","removeFromCart","removeFromCart2","calculateTotal","items","reduce","ack","item","quantity","price","formContext","form","state","setState","console","log","length","map","productId","toFixed"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAUA,MAAMC,IAAI,GAAG;AACXC,EAAAA,SAAS,EAAE,EADA;AAEXC,EAAAA,QAAQ,EAAE,EAFC;AAGXC,EAAAA,KAAK,EAAE;AAHI,CAAb;;AAMA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,cAAxB;AAAwCC,EAAAA;AAAxC,CAAD,KAA+D;AAAA;;AAC3F,QAAMC,cAAc,GAAIC,KAAD,IACvBA,KAAK,CAACC,MAAN,CAAa,CAACC,GAAD,EAAcC,IAAd,KAAuBD,GAAG,GAAGC,IAAI,CAACC,QAAL,GAAgBD,IAAI,CAACE,KAA/D,EAAsE,CAAtE,CADA;;AAIE,QAAOC,WAAW,GAAGnB,UAAU,CAACE,WAAD,CAA/B;AACA;AACJ;;AAEI,MAAIE,SAAS,GAAGe,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEC,IAAb,CAAkBhB,SAAlC;AACA,MAAIC,QAAQ,GAAGc,WAAW,CAACC,IAAZ,CAAiBf,QAAhC;AACA,MAAIC,KAAK,GAAGa,WAAW,CAACC,IAAZ,CAAiBd,KAA7B;AAEA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAW;AAAEG,IAAAA,SAAS,EAAEA,SAAb;AAAwBC,IAAAA,QAAQ,EAAEA,QAAlC;AAA4CC,IAAAA,KAAK,EAAEA;AAAnD,GAAX,CAAlC;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEf,KAAnB;AAEF,sBACE,QAAC,OAAD;AAAA,4BACE;AAAA,wCAAwBe,KAAxB,aAAwBA,KAAxB,uBAAwBA,KAAK,CAAEjB,SAA/B,OAA2CiB,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGb,SAAS,CAACiB,MAAV,KAAqB,CAArB,gBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB,GAAoD,IAFvD,EAGGjB,SAAS,CAACkB,GAAV,CAAcV,IAAI,iBACjB,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,MAAA,SAAS,EAAEP,SAHb;AAIE,MAAA,cAAc,EAAEC,cAJlB;AAKE,MAAA,eAAe,EAAEC;AALnB,OACOK,IAAI,CAACW,SADZ;AAAA;AAAA;AAAA;AAAA,YADD,CAHH,eAYE;AAAA,6BAAaf,cAAc,CAACJ,SAAD,CAAd,CAA0BoB,OAA1B,CAAkC,CAAlC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAhCD;;GAAMrB,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import CartItem from '../CartItem/CartItem';\nimport { Wrapper } from './Cart.styles';\nimport { CartItemType } from '../CartItemType';\nimport { useContext, useState } from 'react';\nimport { FormContext } from '../../Pages/Login/FormContext';\nimport {FormData} from '../../Pages/Login/LoginForm';\n\nexport type Props =  {\n  cartItems: CartItemType[];\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n  removeFromCart2: (id: number) => void;\n};\n\nconst init = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\"\n}\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart, removeFromCart2 }) => {\n  const calculateTotal = (items: CartItemType[]) =>\n  items.reduce((ack: number, item) => ack + item.quantity * item.price, 0);\n    \n\n    const  formContext = useContext(FormContext)\n    /* if (!formContext)\n      throw(new Error(\"FormContext is undefined!\")) */\n      \n    let firstName = formContext?.form.firstName;\n    let lastName = formContext.form.lastName;\n    let email = formContext.form.email;\n\n    const [state, setState] = useState<FormData>({ firstName: firstName, lastName: lastName, email: email });\n    console.log(state?.email)\n\n  return (\n    <Wrapper>\n      <h2>Your Shopping Cart {state?.firstName} {state}</h2>\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\n      {cartItems.map(item => (\n        <CartItem\n          key={item.productId}\n          item={item}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n          removeFromCart2={removeFromCart2}\n        />\n      ))}\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n    </Wrapper>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}