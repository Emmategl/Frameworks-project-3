{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/teas.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from 'react-query'; // Components\n\nimport Item from '../Item/Item';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\n// Styles\nimport { Wrapper } from '../App.styles';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getTeas = async () => await (await fetch('http://localhost:3000/product/categories/tea')).json();\n\nconst Teas = () => {\n  _s();\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('products', getTeas);\n\n  async function handleAddToCart(clickedItem) {\n    try {\n      const isItemInCart = (await getBasket()).some(item => item.productId === clickedItem.productId);\n\n      if (isItemInCart) {\n        const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + clickedItem.productId + \"/1\", {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        });\n        return;\n      }\n\n      const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          productId: clickedItem.productId,\n          quantity: 1\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let data = await response.json();\n      alert(\"Item Added To Cart\");\n      return setCartItems(prev => [...prev, clickedItem]);\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  async function handleRemoveFromCart(id) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\", {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          productId: id,\n          quantity: 1\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let data = await response.json();\n      alert(\"Item removed\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  async function handleDecrementFromCart(id) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + id + \"/-1\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let data = await response.json();\n      alert(\"Item decremented\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Something went wrong ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"We not only select our coffee carefully, but also our selection of teas. That is why you can find a wide range of exclusive and tasty teas with us. Are you mostly into green, black or white tea? We have many exciting flavors and types of tea, so you can find the one that suits your taste buds. We only deal with the best suppliers so we can ensure that you get the best possible quality. We hand-pick our items and therefore have a unique selection of the best items that you can treat yourself to in a busy everyday life. We pack everything ourselves by hand, and do everything we can to give you a good experience when you buy tea and coffee online. We pack everything ourselves by hand, and do everything we can to give you a good experience when you buy tea and coffee online.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: data === null || data === void 0 ? void 0 : data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          item: item,\n          handleAddToCart: handleAddToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, item.productId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Teas, \"Z3b93vmhJEnCPN4ovcxRGbOtffM=\", false, function () {\n  return [useQuery];\n});\n\n_c = Teas;\nexport default Teas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Teas\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/teas.tsx"],"names":["useQuery","Item","LinearProgress","Grid","Wrapper","React","getTeas","fetch","json","Teas","data","isLoading","error","handleAddToCart","clickedItem","isItemInCart","getBasket","some","item","productId","response","method","headers","body","JSON","stringify","quantity","alert","setCartItems","prev","err","console","log","handleRemoveFromCart","id","handleDecrementFromCart","map"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { QueryKey, useQuery, UseQueryOptions } from 'react-query';\n// Components\nimport Item from '../Item/Item';\nimport Cart from '../Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n// Styles\nimport { Wrapper, StyledButton } from '../App.styles';\nimport { useEffect } from 'react';\nimport React from 'react';\nimport { kStringMaxLength } from 'node:buffer';\n// Types\nexport type CartItemType = {\n  productId: number;\n  category: string;\n  description: string;\n  img_path: string;\n  price: number;\n  name: string;\n  quantity: number;\n};\n\nconst getTeas = async (): Promise<CartItemType[]> =>\nawait (await fetch('http://localhost:3000/product/categories/tea')).json();\n\nconst Teas = () => {\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getTeas\n  );\n  \n \n\n    async function handleAddToCart(clickedItem: CartItemType) {\n      try {\n        const isItemInCart = (await getBasket()).some(item => item.productId === clickedItem.productId); \n        if (isItemInCart) {\n          const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + clickedItem.productId + \"/1\", {\n            method: \"PUT\",\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\",\n            },\n          });\n          return\n        } \n        const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            productId: clickedItem.productId,\n            quantity: 1,\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n          },\n        });\n        let data = await response.json();\n        alert(\"Item Added To Cart\");\n        return setCartItems((prev) => [...prev, clickedItem])\n      } catch (err) {\n        alert(\"Something Went Wrong\");\n        console.log(err);\n      }\n    }\n  async function handleRemoveFromCart(id: number) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\", {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          productId: id,\n          quantity: 1,\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n      let data = await response.json();\n      alert(\"Item removed\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n  async function handleDecrementFromCart(id: number) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + id + \"/-1\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n      let data = await response.json();\n      alert(\"Item decremented\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong ...</div>;\n\n  return (\n    <Wrapper>\n      <h1>Teas</h1>\n      <p>\n      We not only select our coffee carefully, but also our selection of teas. That is why you can find\n      a wide range of exclusive and tasty teas with us. Are you mostly into green, black or white tea?\n      We have many exciting flavors and types of tea, so you can find the one that suits your taste buds.\n      We only deal with the best suppliers so we can ensure that you get the best possible quality. We hand-pick\n      our items and therefore have a unique selection of the best items that you can treat yourself to in a busy\n      everyday life. We pack everything ourselves by hand, and do everything we can to give you a good experience\n      when you buy tea and coffee online. We pack everything ourselves by hand, and do everything we can to give you\n      a good experience when you buy tea and coffee online.\n      </p>\n      <br></br>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.productId} xs={12} sm={3}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default Teas;\n"]},"metadata":{},"sourceType":"module"}