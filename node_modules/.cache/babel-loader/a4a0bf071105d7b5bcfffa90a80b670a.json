{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Pages/Login/LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormContext } from \"./FormContext\";\nimport { MyButton } from \"../../App\";\nimport { Wrapper } from \"../../App.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst divStyle = {\n  marginBottom: \"10px\"\n};\nconst labelStyle = {\n  display: \"block\",\n  width: \"150px\",\n  textAlign: \"right\",\n  marginRight: \"10px\"\n};\nexport function LoginForm() {\n  _s();\n\n  const formContext = useContext(FormContext); // check conext\n\n  if (!formContext) throw new Error(\"FormContext is undefined!\");\n  let email = formContext.login.email;\n  let firstName = formContext.login.firstName;\n  let lastName = formContext.login.lastName;\n  const history = useHistory();\n  const [state, setState] = React.useState({\n    email: email,\n    firstName: firstName,\n    lastName: lastName\n  });\n  const [errors, setErrors] = React.useState({});\n\n  const validateEmail = value => {\n    const regNumber = RegExp(/^\\s?[A-Z0–9]+[A-Z0–9._+-]{0,}@[A-Z0–9._+-]+\\.[A-Z0–9]{2,4}\\s?$/i);\n\n    if (!regNumber.test(value)) {\n      return {\n        email: \"Not a valid email\"\n      };\n    }\n\n    return {\n      email: undefined\n    };\n  };\n\n  const handleEmail = event => {\n    setState(prev => ({ ...prev,\n      ...{\n        email: event.target.value\n      }\n    }));\n    setErrors(prev => ({ ...prev,\n      ...validateEmail(event.target.value)\n    }));\n  };\n\n  const validateFirstName = value => {\n    const regName = /^([a-zA-Z]{2,}\\s*)+$/;\n\n    if (!regName.test(value)) {\n      return {\n        firstName: \"Not a valid firstname\"\n      };\n    } else if (value.length > 15) {\n      return {\n        firstName: \"Must be 15 characters or less\"\n      };\n    }\n\n    return {\n      firstName: undefined\n    };\n  };\n\n  const handleFirstName = event => {\n    setState(prev => ({ ...prev,\n      ...{\n        firstName: event.target.value\n      }\n    }));\n    setErrors(prev => ({ ...prev,\n      ...validateFirstName(event.target.value)\n    }));\n  };\n\n  const validateLastName = value => {\n    const regName = /^([A-ZÆØÅa-zæøå]{2,}\\s*)+$/;\n\n    if (!regName.test(value)) {\n      return {\n        lastName: \"Not a valid lastname\"\n      };\n    } else if (value.length > 15) {\n      return {\n        lastName: \"Must be 15 characters or less\"\n      };\n    }\n\n    return {\n      lastName: undefined\n    };\n  };\n\n  const handleLastName = event => {\n    setState(prev => ({ ...prev,\n      ...{\n        lastName: event.target.value\n      }\n    }));\n    setErrors(prev => ({ ...prev,\n      ...validateLastName(event.target.value)\n    }));\n  };\n\n  const validate = () => {\n    return { ...validateEmail(state.email),\n      ...validateFirstName(state.firstName),\n      ...validateLastName(state.lastName)\n    };\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const valErrors = validate();\n    if (valErrors.email || valErrors.firstName || valErrors.lastName) return;else {\n      formContext.updateName(state.email, state.firstName, state.lastName);\n      history.goBack();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"4\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: divStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: labelStyle,\n              htmlFor: \"email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"input\",\n              id: \"email\",\n              name: \"email\",\n              value: state.email,\n              onChange: handleEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), errors.email ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: divStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: labelStyle,\n              htmlFor: \"firstName\",\n              children: \"Firstname:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"input\",\n              id: \"firstName\",\n              value: state.firstName,\n              onChange: handleFirstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), errors.firstName ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: divStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: labelStyle,\n              htmlFor: \"lastName\",\n              children: \"Lastname:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"input\",\n              id: \"lastName\",\n              value: state.lastName,\n              onChange: handleLastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), errors.lastName ? /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"20px\",\n              alignItems: \"left\",\n              marginBottom: \"500px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(MyButton, {\n              className: \"btn-primary\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n              className: \"btn-secondary\",\n              onClick: () => history.goBack(),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"R2QyLIKGi0cfvpJsS9ISbc5oLHw=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Pages/Login/LoginForm.tsx"],"names":["React","useContext","Col","Row","useHistory","FormContext","MyButton","Wrapper","divStyle","marginBottom","labelStyle","display","width","textAlign","marginRight","LoginForm","formContext","Error","email","login","firstName","lastName","history","state","setState","useState","errors","setErrors","validateEmail","value","regNumber","RegExp","test","undefined","handleEmail","event","prev","target","validateFirstName","regName","length","handleFirstName","validateLastName","handleLastName","validate","onSubmit","e","preventDefault","valErrors","updateName","goBack","color","padding","alignItems"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport CSS from \"csstype\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormContext } from \"./FormContext\";\nimport { MyButton } from \"../../App\";\nimport { Wrapper } from \"../../App.styles\";\n\nconst divStyle: CSS.Properties = {\n  marginBottom: \"10px\",\n\n};\nconst labelStyle: CSS.Properties = {\n  display: \"block\",\n  width: \"150px\",\n  textAlign: \"right\",\n  marginRight: \"10px\",\n  \n};\n\nexport interface FormData {\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\ninterface FormErrors {\n    email?: string;\n    firstName?: string;\n    lastName?: string;\n  }\n\n\nexport function LoginForm() {\n  \n  const formContext = useContext(FormContext)\n    // check conext\n    if (!formContext)\n    throw(new Error(\"FormContext is undefined!\"))\n  \n  let email = formContext.login.email;\n  let firstName = formContext.login.firstName;\n  let lastName = formContext.login.lastName;\n  \n\n  const history = useHistory()\n\n  const [state, setState] = React.useState<FormData>({email: email, firstName: firstName, lastName: lastName});\n  const [errors, setErrors] = React.useState<FormErrors>({});\n\n  const validateEmail = (value: string): FormErrors => {\n    const regNumber = RegExp(/^\\s?[A-Z0–9]+[A-Z0–9._+-]{0,}@[A-Z0–9._+-]+\\.[A-Z0–9]{2,4}\\s?$/i);\n    if (!regNumber.test(value)) {\n      return { email: \"Not a valid email\" };\n    }\n    return { email: undefined };\n  };\n \n  const handleEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState((prev) => ({ ...prev, ...{ email: event.target.value } }));\n    setErrors((prev) => ({ ...prev, ...validateEmail(event.target.value) }));\n  };\n\n  const validateFirstName = (value: string): FormErrors => {\n    const regName: RegExp = /^([a-zA-Z]{2,}\\s*)+$/;\n    if (!regName.test(value)) {\n      return { firstName: \"Not a valid firstname\" };\n    } else if (value.length > 15) {\n      return { firstName: \"Must be 15 characters or less\" };\n    }\n    return { firstName: undefined };\n  };\n\n  const handleFirstName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState((prev) => ({ ...prev, ...{ firstName: event.target.value } }));\n    setErrors((prev) => ({ ...prev, ...validateFirstName(event.target.value) }));\n  };\n\n\n  const validateLastName = (value: string): FormErrors => {\n    const regName: RegExp = /^([A-ZÆØÅa-zæøå]{2,}\\s*)+$/;\n    if (!regName.test(value)) {\n      return { lastName: \"Not a valid lastname\" };\n    } else if (value.length > 15) {\n      return { lastName: \"Must be 15 characters or less\" };\n    }\n    return { lastName: undefined };\n  };\n  \n  const handleLastName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState((prev) => ({ ...prev, ...{ lastName: event.target.value } }));\n    setErrors((prev) => ({ ...prev, ...validateLastName(event.target.value) }));\n  };\n\n  const validate = (): FormErrors => {\n    return { ...validateEmail(state.email), ...validateFirstName(state.firstName), ...validateLastName(state.lastName) }\n  };\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const valErrors = validate();\n    if (valErrors.email || valErrors.firstName || valErrors.lastName)\n      return\n    else {\n      formContext.updateName(state.email, state.firstName, state.lastName)\n      history.goBack()\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Row>\n        <Col xs=\"4\">\n          <form onSubmit={onSubmit}>\n            <h1>Login</h1>\n            <div style={divStyle}>\n              <label style={labelStyle} htmlFor=\"email\">\n                Email:\n              </label>\n              <input\n                type=\"input\"\n                id=\"email\"\n                name={\"email\"}\n                value={state.email}\n                onChange={handleEmail}\n              />\n              {errors.email ? (\n                <span style={{ color: \"red\" }}>{errors.email}</span>\n              ) : null}\n            </div>\n            <div style={divStyle}>\n              <label style={labelStyle} htmlFor=\"firstName\">\n                Firstname:\n              </label>\n              <input\n                type=\"input\"\n                id=\"firstName\"\n                value={state.firstName}\n                onChange={handleFirstName}\n              />\n              {errors.firstName ? (\n                <span style={{ color: \"red\" }}>{errors.firstName}</span>\n              ) : null}\n            </div>\n            <div style={divStyle}>\n              <label style={labelStyle} htmlFor=\"lastName\">\n                Lastname:\n              </label>\n              <input\n                type=\"input\"\n                id=\"lastName\"\n                value={state.lastName}\n                onChange={handleLastName}\n              />\n              {errors.lastName ? (\n                <span style={{ color: \"red\" }}>{errors.lastName}</span>\n              ) : null}\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                padding: \"20px\",\n                alignItems: \"left\",\n                marginBottom: \"500px\",\n              }}\n              >\n              \n              <MyButton className=\"btn-primary\" type=\"submit\">\n                Save \n              </MyButton>\n              <MyButton className=\"btn-secondary\" onClick={() => history.goBack()}>Cancel</MyButton>\n            </div>\n          </form>\n        </Col>\n      </Row>\n      </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}