{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/allproducts.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useQuery } from 'react-query'; // Components\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport React from 'react';\nimport '../style.css'; // Types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getProducts = async () => await (await fetch('http://localhost:3000/products/info')).json();\n\nexport const getBasket = async () => await (await fetch('http://localhost:3000/customers/1/basketDetails')).json();\n/* const getBasket = async () => { */\n\n/*   const res = await fetch(\"http://localhost:3000/customers/1/basket\"); */\n\n/*   return res.json(); */\n\n/* }; */\n\nconst ProductList = () => {\n  _s();\n\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  React.useEffect(() => {\n    fetch('http://localhost:3000/customers/1/basketDetails').then(response => response.json()).then(cartItems => {\n      setCartItems(cartItems);\n    });\n  }, [cartItems]);\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('products', getProducts);\n  console.log(data);\n\n  const getTotalItems = items => items.reduce((ack, item) => ack + item.quantity, 0);\n\n  async function handleAddToCart(clickedItem) {\n    try {\n      const isItemInCart = (await getBasket()).some(item => item.productId === clickedItem.productId);\n\n      if (isItemInCart) {\n        const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + clickedItem.productId + \"/1\", {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        });\n        return;\n      }\n\n      const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          productId: clickedItem.productId,\n          quantity: 1\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let data = await response.json();\n      alert(\"Item Added To Cart\");\n      return setCartItems(prev => [...prev, clickedItem]);\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  async function handleRemoveFromCart(id) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\", {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          productId: id,\n          quantity: 1\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let data = await response.json();\n      alert(\"Item removed\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  async function handleDecrementFromCart(id) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + id + \"/-1\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let data = await response.json();\n      alert(\"Item decremented\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Something went wrong ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 21\n  }, this);\n  /* return ( */\n\n  /*   <Wrapper> */\n\n  {\n    /*     <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}> */\n  }\n  {\n    /*       <Cart */\n  }\n  /*         cartItems={cartItems} */\n\n  /*         addToCart={handleAddToCart} */\n\n  /*         removeFromCart={handleDecrementFromCart} */\n\n  /*       /> */\n\n  {\n    /*     </Drawer> */\n  }\n  {\n    /*     <StyledButton onClick={() => setCartOpen(true)}> */\n  }\n  {\n    /*       <Badge badgeContent={getTotalItems(cartItems)} color='error'> */\n  }\n  {\n    /*         <AddShoppingCartIcon /> */\n  }\n  {\n    /*       </Badge> */\n  }\n  {\n    /*     </StyledButton> */\n  }\n  {\n    /*     <Grid container spacing={3}> */\n  }\n  {\n    /*       {data?.map(item => ( */\n  }\n  /*         <Grid item key={item.productId} xs={12} sm={4}> */\n\n  {\n    /*           <Item item={item} handleAddToCart={handleAddToCart} /> */\n  }\n  {\n    /*         </Grid> */\n  }\n  /*       ))} */\n\n  {\n    /*     </Grid> */\n  }\n  {\n    /*   </Wrapper> */\n  }\n  /* ); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-image\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"links\",\n        href: \"productDescription.html\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"${product.img_path}\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"name\",\n        children: [\"$\", product.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"des\",\n        children: [\"$\", product.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"price\",\n        children: [\"Price: $\", product.price, \" DKK\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn add\",\n        children: \"ADD TO CART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductList, \"0w91RC/b2bt6is9d6/OM27JEvxY=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/allproducts.tsx"],"names":["useState","useQuery","LinearProgress","React","getProducts","fetch","json","getBasket","ProductList","cartOpen","setCartOpen","cartItems","setCartItems","useEffect","then","response","data","isLoading","error","console","log","getTotalItems","items","reduce","ack","item","quantity","handleAddToCart","clickedItem","isItemInCart","some","productId","method","headers","body","JSON","stringify","alert","prev","err","handleRemoveFromCart","id","handleDecrementFromCart","product","name","description","price"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { QueryKey, useQuery, UseQueryOptions } from 'react-query';\n// Components\nimport Item from '../Item/Item';\nimport Cart from '../Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n// Styles\nimport { Wrapper, StyledButton } from '../App.styles';\nimport { useEffect } from 'react';\nimport React from 'react';\nimport { kStringMaxLength } from 'node:buffer';\nimport '../style.css';\n\n// Types\nexport type CartItemType = {\n  productId: number;\n  category: string;\n  description: string;\n  img_path: string;\n  price: number;\n  name: string;\n  quantity: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('http://localhost:3000/products/info')).json();\n\n  export const getBasket = async (): Promise<CartItemType[]> =>\n  await (await fetch('http://localhost:3000/customers/1/basketDetails')).json();\n\n\n  /* const getBasket = async () => { */\n  /*   const res = await fetch(\"http://localhost:3000/customers/1/basket\"); */\n  /*   return res.json(); */\n  /* }; */\n\n\n const ProductList = () => {\n\n const [cartOpen, setCartOpen] = useState(false);\n\nconst [cartItems, setCartItems] = useState([] as CartItemType[]);\nReact.useEffect(() => {\n  fetch('http://localhost:3000/customers/1/basketDetails')\n    .then((response) => response.json())\n    .then((cartItems) => {\n      setCartItems(cartItems);\n    })\n}, [cartItems]);\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.quantity, 0);\n\n    async function handleAddToCart(clickedItem: CartItemType) {\n      try {\n        const isItemInCart = (await getBasket()).some(item => item.productId === clickedItem.productId); \n        if (isItemInCart) {\n          const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + clickedItem.productId + \"/1\", {\n            method: \"PUT\",\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\",\n            },\n          });\n          return\n        } \n        const response = await fetch(\"http://localhost:3000/customers/1/basket\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            productId: clickedItem.productId,\n            quantity: 1,\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n          },\n        });\n        let data = await response.json();\n        alert(\"Item Added To Cart\");\n        return setCartItems((prev) => [...prev, clickedItem])\n      } catch (err) {\n        alert(\"Something Went Wrong\");\n        console.log(err);\n      }\n    }\n\n  async function handleRemoveFromCart(id: number) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\", {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          productId: id,\n          quantity: 1,\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n      let data = await response.json();\n      alert(\"Item removed\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  async function handleDecrementFromCart(id: number) {\n    try {\n      const response = await fetch(\"http://localhost:3000/customers/1/basket/\" + id + \"/-1\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      });\n      let data = await response.json();\n      alert(\"Item decremented\");\n    } catch (err) {\n      alert(\"Something Went Wrong\");\n      console.log(err);\n    }\n  }\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong ...</div>;\n\n  /* return ( */\n  /*   <Wrapper> */\n  {/*     <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}> */}\n  {/*       <Cart */}\n  /*         cartItems={cartItems} */\n  /*         addToCart={handleAddToCart} */\n  /*         removeFromCart={handleDecrementFromCart} */\n  /*       /> */\n  {/*     </Drawer> */}\n  {/*     <StyledButton onClick={() => setCartOpen(true)}> */}\n  {/*       <Badge badgeContent={getTotalItems(cartItems)} color='error'> */}\n  {/*         <AddShoppingCartIcon /> */}\n  {/*       </Badge> */}\n  {/*     </StyledButton> */}\n  {/*     <Grid container spacing={3}> */}\n  {/*       {data?.map(item => ( */}\n  /*         <Grid item key={item.productId} xs={12} sm={4}> */\n  {/*           <Item item={item} handleAddToCart={handleAddToCart} /> */}\n  {/*         </Grid> */}\n  /*       ))} */\n  {/*     </Grid> */}\n  {/*   </Wrapper> */}\n  /* ); */\n\n  return (\n    <div className=\"content\">\n    <div className=\"product-image\">\n    <a className=\"links\" href=\"productDescription.html\">\n    <img src=\"${product.img_path}\"></img></a>\n    </div>\n    <div className=\"product-info\">\n    <h2 className=\"name\">${product.name}</h2>\n        <p className=\"des\">${product.description}</p>\n        <p className=\"price\">Price: ${product.price} DKK</p>\n        <button className=\"btn add\">ADD TO CART</button>\n    </div>    \n    </div>\n  );\n};\n\nexport default ProductList;\n"]},"metadata":{},"sourceType":"module"}