{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/prodDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/* interface product { */\n\n/*     productId: number; */\n\n/*     description: string; */\n\n/*     img_path: string; */\n\n/*     price: number; */\n\n/*     name: string; */\n\n/*     longDescription: string; */\n\n/* } */\n\n/*  */\n\n/* function Product({match}: {match: any}) { */\n\n/*     return ( */\n\n/*       <div> */\n{\n  /*         This is our lovely product page! */\n}\n{\n  /*         You are currently viewing {match.params.id} */\n}\n{\n  /*       </div> */\n}\n/*     ); */\n\n/*   } */\n\nconst ProductDetail = ({\n  match\n}) => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"ID: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"ID: product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Product ID: \", id.params.productId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ProductDetail, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductDetail;\nexport default ProductDetail;\n/*  const ProductDetail = ({match}: {match: any}, {location} : {location: any}) */\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/prodDetails.tsx"],"names":["React","useParams","ProductDetail","match","id","params","productId"],"mappings":";;;AACA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAAsDC,SAAtD,QAAuE,kBAAvE;;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AACA;AAAC;AAA+C;AAChD;AAAC;AAA0D;AAC3D;AAAC;AAAmB;AACpB;;AACA;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA2B;AAAA;;AAC3C,MAAI;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAtB;AAGF,sBACE;AAAA,4BACI;AAAA,yBAASG,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGE;AAAA,iCAAgBA,EAAE,CAACC,MAAH,CAAUC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAdH;;GAAMJ,a;UACaD,S;;;KADbC,a;AAeJ,eAAeA,aAAf;AAGD","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Link, NavLink, Route, Switch, useParams } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { match } from \"react-router-dom\";\n\n\n/* interface product { */\n/*     productId: number; */\n/*     description: string; */\n/*     img_path: string; */\n/*     price: number; */\n/*     name: string; */\n/*     longDescription: string; */\n/* } */\n/*  */\n/* function Product({match}: {match: any}) { */\n/*     return ( */\n/*       <div> */\n{/*         This is our lovely product page! */}\n{/*         You are currently viewing {match.params.id} */}\n{/*       </div> */}\n/*     ); */\n/*   } */\n\nconst ProductDetail = ({match}: {match: any}) => {\n      let { id } = useParams<{ id: any }>();\n      \n\n    return (\n      <div>\n          <h3>ID: {id}</h3>\n          <h3>ID: product</h3>\n        <p>Product ID: {id.params.productId}</p>\n        {/* <img src=\"\" alt=\"\" /> */}\n        {/* <p>Product name:{location.state.productObject.attributes.name} </p> */}\n        {/* <p>Product description: </p> */}\n      </div>\n    )\n  }\n  export default ProductDetail\n\n\n /*  const ProductDetail = ({match}: {match: any}, {location} : {location: any}) */"]},"metadata":{},"sourceType":"module"}