{"ast":null,"code":"export const getBasket = async () => await (await fetch(\"http://localhost:3001/customers/1/basketDetails\")).json();\nexport async function HandleAddToCart(clickedItem) {\n  try {\n    const isItemInCart = (await getBasket()).some(item => item.productId === clickedItem.productId);\n\n    if (isItemInCart) {\n      await fetch(\"http://localhost:3001/customers/1/basket/\" + clickedItem.productId + \"/1\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      return;\n    }\n\n    await fetch(\"http://localhost:3001/customers/1/basket\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        productId: clickedItem.productId,\n        quantity: 1\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    });\n  } catch (err) {\n    alert(\"Something Went Wrong\");\n    console.log(err);\n  }\n}\n_c = HandleAddToCart;\nexport async function HandleDecrementFromCart(id) {\n  try {\n    await fetch(\"http://localhost:3001/customers/1/basket/\" + id + \"/-1\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    });\n  } catch (err) {\n    alert(\"Something Went Wrong\");\n    console.log(err);\n  }\n}\n_c2 = HandleDecrementFromCart;\nexport async function HandleRemoveFromCart(id) {\n  try {\n    await fetch(\"http://localhost:3001/customers/1/basket/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    });\n    console.log(id);\n  } catch (err) {\n    alert(\"Something Went Wrong\");\n    console.log(err);\n  }\n}\n_c3 = HandleRemoveFromCart;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"HandleAddToCart\");\n$RefreshReg$(_c2, \"HandleDecrementFromCart\");\n$RefreshReg$(_c3, \"HandleRemoveFromCart\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/Source code/hot_liquids/src/Components/BasketFunctionality.tsx"],"names":["getBasket","fetch","json","HandleAddToCart","clickedItem","isItemInCart","some","item","productId","method","headers","body","JSON","stringify","quantity","err","alert","console","log","HandleDecrementFromCart","id","HandleRemoveFromCart"],"mappings":"AAEA,OAAO,MAAMA,SAAS,GAAG,YACvB,MAAM,CAAC,MAAMC,KAAK,CAAC,iDAAD,CAAZ,EAAiEC,IAAjE,EADD;AAGP,OAAO,eAAeC,eAAf,CAA+BC,WAA/B,EAA4D;AACjE,MAAI;AACF,UAAMC,YAAY,GAAG,CAAC,MAAML,SAAS,EAAhB,EAAoBM,IAApB,CAClBC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmBJ,WAAW,CAACI,SADtB,CAArB;;AAGA,QAAIH,YAAJ,EAAkB;AAChB,YAAMJ,KAAK,CAAC,8CAA8CG,WAAW,CAACI,SAA1D,GAAsE,IAAvE,EACT;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAFX,OADS,CAAX;AAQA;AACD;;AACD,UAAMT,KAAK,CAAC,0CAAD,EAA6C;AACtDQ,MAAAA,MAAM,EAAE,MAD8C;AAEtDE,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,QAAAA,SAAS,EAAEJ,WAAW,CAACI,SADJ;AAEnBM,QAAAA,QAAQ,EAAE;AAFS,OAAf,CAFgD;AAMtDJ,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAN6C,KAA7C,CAAX;AAUD,GAzBD,CAyBE,OAAOK,GAAP,EAAY;AACZC,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD;AACF;KA9BqBZ,e;AAgCtB,OAAO,eAAegB,uBAAf,CAAuCC,EAAvC,EAAmD;AACxD,MAAI;AACH,UAAMnB,KAAK,CACR,8CAA8CmB,EAA9C,GAAmD,KAD3C,EAER;AACEX,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFX,KAFQ,CAAX;AASA,GAVD,CAUE,OAAOK,GAAP,EAAY;AACZC,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD;AACF;MAfqBI,uB;AAiBtB,OAAO,eAAeE,oBAAf,CAAoCD,EAApC,EAAgD;AACrD,MAAI;AACF,UAAMnB,KAAK,CAAC,8CAA8CmB,EAA/C,EAAmD;AAC5DX,MAAAA,MAAM,EAAE,QADoD;AAE5DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFmD,KAAnD,CAAX;AAOAO,IAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AACD,GATD,CASE,OAAOL,GAAP,EAAY;AACZC,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD;AACF;MAdqBM,oB","sourcesContent":["import { BasketItemType } from \"./BasketItemType\";\n\nexport const getBasket = async (): Promise<BasketItemType[]> =>\n  await (await fetch(\"http://localhost:3001/customers/1/basketDetails\")).json();\n\nexport async function HandleAddToCart(clickedItem: BasketItemType) {\n  try {\n    const isItemInCart = (await getBasket()).some(\n      (item) => item.productId === clickedItem.productId\n    );\n    if (isItemInCart) {\n      await fetch(\"http://localhost:3001/customers/1/basket/\" + clickedItem.productId + \"/1\",\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n          },\n        }\n      );\n      return;\n    }\n    await fetch(\"http://localhost:3001/customers/1/basket\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        productId: clickedItem.productId,\n        quantity: 1,\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    });\n  } catch (err) {\n    alert(\"Something Went Wrong\");\n    console.log(err);\n  }\n}\n\nexport async function HandleDecrementFromCart(id: number) {\n  try {\n   await fetch(\n      \"http://localhost:3001/customers/1/basket/\" + id + \"/-1\",\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n      }\n    );\n  } catch (err) {\n    alert(\"Something Went Wrong\");\n    console.log(err);\n  }\n}\n\nexport async function HandleRemoveFromCart(id: number) {\n  try {\n    await fetch(\"http://localhost:3001/customers/1/basket/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n      \n    });\n    console.log(id)\n  } catch (err) {\n    alert(\"Something Went Wrong\");\n    console.log(err);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}