{"ast":null,"code":"var _jsxFileName = \"/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/prodDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Wrapper } from \"../App.styles\";\nimport handleAddToCart from \"./allproducts\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Item from '../Item/Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst init = {\n  productId: 0,\n  category: \"no\",\n  description: \"no\",\n  img_path: \"no\",\n  price: 0,\n  name: \"no\",\n  quantity: 0,\n  longDescription: \"no\"\n};\n\nconst ProductDetails = ({\n  match\n}) => {\n  _s();\n\n  const getProduct = async () => await (await fetch('http://localhost:3000/products/' + match.params.productId)).json();\n\n  const {\n    data\n  } = useQuery('product', getProduct);\n  let validated = CartItemType;\n\n  if (data === undefined) {\n    validated = data;\n  } else {\n    const validated = init;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All of our products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"At 'Hot Liquids' you will always find a good selection of really delicious complete and tea in many flavours. We only sell coffee beans of the highest quality, so if yo filter or espresso coffee, have a look at our large selection. We not only select ou selection of teas. That is why you can find a wide range of exclusive and tasty teas black or white tea? We have many exciting flavors and types of tea, so you can find We only deal with the best suppliers so we can ensure that you get the best possible We only deal with the best suppliers so we can ensure that you get the best possible\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          item: validated,\n          handleAddToCart: handleAddToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, data === null || data === void 0 ? void 0 : data.productId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 1\n  }, this);\n};\n\n_s(ProductDetails, \"wDefygpsWBVTl/fEL2emlq2/574=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductDetails;\nexport default ProductDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetails\");","map":{"version":3,"sources":["/Users/emmateglbraender/Documents/ITU/2semester/Frameworks and Architectures for the Web/Mini projects/Mini project 3/hot_liquids/src/Components/prodDetails.tsx"],"names":["React","useQuery","Wrapper","handleAddToCart","Grid","Item","init","productId","category","description","img_path","price","name","quantity","longDescription","ProductDetails","match","getProduct","fetch","params","json","data","validated","CartItemType","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAOC,eAAP,MAA4B,eAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAaA,MAAMC,IAAI,GAAE;AACVC,EAAAA,SAAS,EAAE,CADD;AAEVC,EAAAA,QAAQ,EAAE,IAFA;AAGVC,EAAAA,WAAW,EAAE,IAHH;AAIVC,EAAAA,QAAQ,EAAE,IAJA;AAKVC,EAAAA,KAAK,EAAE,CALG;AAMVC,EAAAA,IAAI,EAAE,IANI;AAOVC,EAAAA,QAAQ,EAAE,CAPA;AAQVC,EAAAA,eAAe,EAAE;AARP,CAAZ;;AAWA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA2B;AAAA;;AAC5C,QAAMC,UAAU,GAAG,YACnB,MAAM,CAAC,MAAMC,KAAK,CAAC,oCAAmCF,KAAK,CAACG,MAAN,CAAaZ,SAAjD,CAAZ,EAAyEa,IAAzE,EADN;;AAEA,QAAM;AAACC,IAAAA;AAAD,MAASpB,QAAQ,CACrB,SADqB,EAErBgB,UAFqB,CAAvB;AAKA,MAAIK,SAAS,GAAGC,YAAhB;;AAEA,MAAGF,IAAI,KAAKG,SAAZ,EACA;AACEF,IAAAA,SAAS,GAAGD,IAAZ;AACC,GAHH,MAII;AACF,UAAMC,SAAS,GAAGhB,IAAlB;AACD;;AAEP,sBAEA,QAAC,OAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAiC,QAAA,EAAE,EAAE,EAArC;AAAyC,QAAA,EAAE,EAAE,CAA7C;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEgB,SAAZ;AAAuB,UAAA,eAAe,EAAEnB;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF,SAAgBkB,IAAhB,aAAgBA,IAAhB,uBAAgBA,IAAI,CAAEd,SAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;AAmBE,CArCF;;GAAMQ,c;UAGed,Q;;;KAHfc,c;AAsCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Link, match, NavLink, Route, Switch, useParams } from 'react-router-dom';\nimport { useQuery } from \"react-query\";\nimport { Wrapper } from \"../App.styles\";\nimport { MyButtonGrid } from \"../App\";\nimport handleAddToCart from \"./allproducts\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Item from '../Item/Item';\n\nexport type CartItemType = {\n    productId: number;\n    category: string;\n    description: string;\n    img_path: string;\n    price: number;\n    name: string;\n    quantity: number;\n    longDescription: string;\n  };\n\nconst init ={\n  productId: 0,\n  category: \"no\",\n  description: \"no\",\n  img_path: \"no\",\n  price: 0,\n  name: \"no\",\n  quantity: 0,\n  longDescription: \"no\",\n}\n\nconst ProductDetails = ({match}: {match: any}) => {\n      const getProduct = async (): Promise<CartItemType> =>\n      await (await fetch('http://localhost:3000/products/'+ match.params.productId)).json(); \n      const {data} = useQuery<CartItemType>(\n        'product',\n        getProduct\n      );\n\n      let validated = CartItemType;\n\n      if(data === undefined)\n      {\n        validated = data;\n        }\n      else{\n        const validated = init;\n      }\n\nreturn (\n\n<Wrapper>\n  <h1>All of our products</h1>\n  <p>At 'Hot Liquids' you will always find a good selection of really delicious complete\n    and tea in many flavours. We only sell coffee beans of the highest quality, so if yo\n    filter or espresso coffee, have a look at our large selection. We not only select ou\n    selection of teas. That is why you can find a wide range of exclusive and tasty teas\n    black or white tea? We have many exciting flavors and types of tea, so you can find \n    We only deal with the best suppliers so we can ensure that you get the best possible\n    We only deal with the best suppliers so we can ensure that you get the best possible\n    </p>\n  <br></br>\n  <Grid container spacing={3}>\n      <Grid item key={data?.productId} xs={12} sm={3}>\n        <Item item={validated} handleAddToCart={handleAddToCart} />\n      </Grid>\n  </Grid>\n</Wrapper>\n)}\nexport default ProductDetails\n"]},"metadata":{},"sourceType":"module"}